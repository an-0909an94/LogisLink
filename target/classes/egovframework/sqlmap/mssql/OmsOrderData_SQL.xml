<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="omsOrderDataNS">	
	<select id="selectOmsOrderList" parameterType="java.util.HashMap" resultType="omsOrderVO">
		SELECT AA.*
		FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY AAA.regdate desc) number
			  , AAA.*
		  	FROM 
		  		(
				SELECT
		             A.ORDER_ID         				orderId
		           , A.REQ_CUST_ID      				reqCustId
		           , A.REQ_DEPT_ID      				reqDeptId
		           , A.CUST_ID        					buyCustId
		           , A.DEPT_ID         					buyDeptId
		           , C.MNG_CUST_ID						mngCustId
		           , C.MNG_DEPT_ID						mngDeptId
		           , (SELECT DEPT_NAME FROM T_CUST_DEPT WHERE CUST_ID = A.REQ_CUST_ID AND DEPT_ID = A.REQ_DEPT_ID) mngDeptName
		           , ISNULL(A.REQ_TEL, '')         		reqTel
		           , ISNULL(A.REQ_ADDR, '')         	reqAddr
		           , ISNULL(A.REQ_ADDR_DETAIL, '')   	reqAddrDetail
		           , A.CUST_ID         					custId
		           , A.DEPT_ID         					deptId
		           , A.IN_OUT_SCTN      				inOutSctn
		           , A.TRUCK_TYPE_CODE   				truckTypeCode
		           , A.S_COM_NAME      					sComName
		           , A.S_SIDO         					sSido
		           , A.S_GUNGU         					sGungu
		           , A.S_DONG         					sDong
		           , A.S_ADDR         					sAddr
		           , A.S_ADDR_DETAIL      				sAddrDetail
		           , CONVERT(CHAR(19), A.S_DATE, 20)    sDate
		           , CONVERT(CHAR(19), A.S_DATE, 23)    sDateDay
		           , CONVERT(CHAR(19), A.S_DATE, 24)    sDateTime
		           , A.S_STAFF         					sStaff
		           , A.S_TEL            				sTel
		           , A.S_MEMO         					sMemo
		           , A.E_COM_NAME      					eComName
		           , A.E_SIDO         					eSido
		           , A.E_GUNGU         					eGungu
		           , A.E_DONG         					eDong
		           , A.E_ADDR         					eAddr
		           , A.E_ADDR_DETAIL      				eAddrDetail
		           , CONVERT(CHAR(19), A.E_DATE, 20)    eDate 
		           , CONVERT(CHAR(19), A.E_DATE, 23)    eDateDay
		           , CONVERT(CHAR(19), A.E_DATE, 24)    eDateTime
		           , A.E_STAFF         					eStaff
		           , A.E_TEL            				eTel
		           , A.E_MEMO         					eMemo
		           , A.S_LAT            				sLat
		           , A.S_LON            				sLon
		           , A.E_LAT            				eLat
		           , A.E_LON            				eLon
		           , A.GOODS_NAME      					goodsName
		           , CONVERT(FLOAT,A.GOODS_WEIGHT)/1000 goodsWeight
		           , A.WEIGHT_UNIT_CODE   				weightUnitCode
		           , A.GOODS_QTY         				goodsQty
		           , A.QTY_UNIT_CODE      				qtyUnitCode
		           , A.S_WAY_CODE      					sWayCode
		           , A.E_WAY_CODE      					eWayCode
		           , A.MIX_YN         					mixYn
		           , A.MIX_SIZE         				mixSize
		           , A.RETURN_YN         				returnYn
		           , CASE WHEN A.MIX_YN = 'N' THEN '독차' ELSE '혼적' END mixName
		           , CASE WHEN A.RETURN_YN = 'N' THEN '편도' ELSE '왕복' END returnName
		           , A.CAR_TON_CODE      				carTonCode
		           , A.CAR_TYPE_CODE      				carTypeCode
		           , A.CHARGE_TYPE      				chargeType
		           , A.DISTANCE         				distance
		           , A.TIME            					time
		           , A.REQ_MEMO         				reqMemo
		           , A.DRIVER_MEMO      				driverMemo
		           , A.ITEM_CODE         				itemCode
		           , A.ORDER_STATE      				orderState
		           , A.REGID            
		           , CONVERT(CHAR(16), A.REGDATE, 20)   regdate 
		           , B.ALLOC_CHARGE      				buyCharge
		           , B.ALLOC_FEE         				buyFee
		           , C.CUST_NAME         				buyCustName
		           , D.VEHIC_ID         				vehicId
		           , D.DRIVER_ID        				driverId
		           , D.CAR_NUM         					carNum
		           , D.DRIVER_NAME      				driverName
		           , D.DRIVER_TEL      					driverTel
				   , B.BUY_STAFF_ID    					buyStaffId
				   , A.START_DATE	  					startDate
				   , A.FINISH_DATE 	  					finishDate
				   , A.ENTER_DATE 	  					enterDate
	       		   , B.ALLOC_ID 						allocId
				   , (SELECT USER_NAME FROM T_USER BB WHERE USER_ID = B.BUY_STAFF_ID) buyStaff
		           , (SELECT DEPT_NAME FROM T_CUST_DEPT WHERE CUST_ID = A.CUST_ID AND DEPT_ID = A.DEPT_ID) buyDeptName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'QTY_UNIT_CD' AND CODE = A.QTY_UNIT_CODE) qtyUnitName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'CAR_TON_CD' AND CODE = A.CAR_TON_CODE) carTonName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'CAR_TYPE_CD' AND CODE = A.CAR_TYPE_CODE) carTypeName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'TRUCK_TYPE_CD' AND CODE = A.TRUCK_TYPE_CODE) truckTypeName  
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'ITEM_CD' AND CODE = A.ITEM_CODE) itemName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'ORDER_STATE_CD' AND CODE = A.ORDER_STATE) orderStateName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'IN_OUT_SCTN' AND CODE = A.IN_OUT_SCTN) inOutSctnName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'WAY_TYPE_CD' AND CODE = A.S_WAY_CODE) sWayName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'WAY_TYPE_CD' AND CODE = A.E_WAY_CODE) eWayName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'CHARGE_TYPE_CD' AND CODE = A.CHARGE_TYPE) chargeTypeName
		           , (SELECT COUNT(1) FROM T_ORDER_STOP WHERE ORDER_ID = A.ORDER_ID AND USE_YN = 'Y') stopCount
		           , (SELECT TOP 1 E_COM_NAME FROM T_ORDER_STOP WHERE ORDER_ID = A.ORDER_ID AND USE_YN = 'Y' ORDER BY STOP_SEQ ASC) stopName
				   , ISNULL(A.DANGER_GOODS_YN, 'N') 	dangerGoodsYn
				   , ISNULL(A.CHEMICALS_YN, 'N') 		chemicalsYn
				   , ISNULL(A.FOREIGN_LICENSE_YN, 'N')  foreignLicenseYn
		        FROM    
		           (
		            SELECT
		                   ORDER_ID			 , REQ_CUST_ID			, REQ_DEPT_ID			, REQ_TEL			, REQ_ADDR
		                 , REQ_ADDR_DETAIL   , CUST_ID         		, DEPT_ID         		, IN_OUT_SCTN   	, TRUCK_TYPE_CODE
		                 , S_COM_NAME      	 , S_SIDO         		, S_GUNGU         		, S_DONG      		, S_ADDR
		                 , S_ADDR_DETAIL     , S_DATE	         	, S_STAFF 	 	        , S_TEL   	        , S_MEMO
		                 , E_COM_NAME      	 , E_SIDO         		, E_GUNGU       	  	, E_DONG      		, E_ADDR
		                 , E_ADDR_DETAIL   	 , E_DATE         		, E_STAFF         		, E_TEL         	, E_MEMO
		                 , S_LAT         	 , S_LON     	        , E_LAT         	    , E_LON     	    , GOODS_NAME
		                 , GOODS_WEIGHT   	 , WEIGHT_UNIT_CODE 	, GOODS_QTY         	, QTY_UNIT_CODE   	, S_WAY_CODE
		                 , E_WAY_CODE        , MIX_YN         		, MIX_SIZE         		, RETURN_YN     	, CAR_TON_CODE
		                 , CAR_TYPE_CODE   	 , CHARGE_TYPE      	, DISTANCE         		, TIME         		, REQ_MEMO
		                 , DRIVER_MEMO       , ITEM_CODE         	, REGID            		, REGDATE      		, ORDER_STATE
		                 , START_DATE		 , FINISH_DATE			, ENTER_DATE			, DANGER_GOODS_YN   , CHEMICALS_YN
		                 , FOREIGN_LICENSE_YN
		            FROM
		                  T_ORDER
		            WHERE
		                  REQ_CUST_ID = #{custId}
		                  <if test='deptId != null and !"".equals(deptId)'>
		                     AND REQ_DEPT_ID = #{deptId}
		                  </if>
		                  <if test = "regid != null and regid != ''"> AND REGID = #{regid} </if> 
		                  <if test = "fromDate != null and fromDate != '' and toDate != null and toDate != ''"> AND ${dateSelector} BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59' </if>
		                  <if test = "addrSearch != null and addrSearch != ''"> AND ${addrSelector} LIKE '%'+ #{addrSearch} +'%' </if>
		                  <if test = "orderState != null and orderState != ''">AND ORDER_STATE = #{orderState}</if>  
		                  <if test = 'myOrder == "Y"'>AND REQ_STAFF_ID = #{loginId}</if>
		         ) A
		         INNER JOIN
		         T_ORDER_ALLOC B ON A.ORDER_ID = B.ORDER_ID 
		                     AND A.REQ_CUST_ID = B.SELL_CUST_ID AND A.REQ_DEPT_ID = B.SELL_DEPT_ID 
		                     AND A.CUST_ID = B.BUY_CUST_ID AND A.DEPT_ID = B.BUY_DEPT_ID
		         INNER JOIN
		          (
             		 SELECT CUST_ID, DEPT_ID, CUST_NAME, MNG_CUST_ID, MNG_DEPT_ID
		             FROM
		                   T_CUST_DTL
		             WHERE
		                   MNG_CUST_ID = #{custId} 
		                   <if test='deptId != null and !"".equals(deptId)'>
		                      AND MNG_DEPT_ID = #{deptId} 
		                   </if>
		                   AND SELL_BUY_SCTN = '02'
       			  ) C ON A.CUST_ID = C.CUST_ID AND A.DEPT_ID = C.DEPT_ID AND A.REQ_CUST_ID = C.MNG_CUST_ID AND A.REQ_DEPT_ID = C.MNG_DEPT_ID
		         LEFT OUTER JOIN
		         T_ORDER_ALLOC D ON A.ORDER_ID = D.ORDER_ID AND ISNULL(D.DRIVER_ID, '') != '' AND ISNULL(D.VEHIC_ID, '') != ''
		         ) AAA
		) AA
		WHERE number BETWEEN #{start} AND #{end}
		ORDER BY number ASC
	</select>
	
	<select id="selectOmsOrderCnt" resultType="string" parameterType="java.util.HashMap">
		SELECT COUNT(1) retCnt
		FROM (
			SELECT
			       ORDER_ID        , REQ_CUST_ID      , REQ_DEPT_ID      , REQ_TEL      , REQ_ADDR
			     , REQ_ADDR_DETAIL   , CUST_ID         , DEPT_ID         , IN_OUT_SCTN   , TRUCK_TYPE_CODE
			     , S_COM_NAME      , S_SIDO         , S_GUNGU         , S_DONG      , S_ADDR
			     , S_ADDR_DETAIL   , S_DATE         , S_STAFF         , S_TEL         , S_MEMO
			     , E_COM_NAME      , E_SIDO         , E_GUNGU         , E_DONG      , E_ADDR
			     , E_ADDR_DETAIL   , E_DATE         , E_STAFF         , E_TEL         , E_MEMO
			     , S_LAT         , S_LON            , E_LAT            , E_LON         , GOODS_NAME
			     , GOODS_WEIGHT   , WEIGHT_UNIT_CODE   , GOODS_QTY         , QTY_UNIT_CODE   , S_WAY_CODE
			     , E_WAY_CODE      , MIX_YN         , MIX_SIZE         , RETURN_YN      , CAR_TON_CODE
			     , CAR_TYPE_CODE   , CHARGE_TYPE      , DISTANCE         , TIME         , REQ_MEMO
			     , DRIVER_MEMO      , ITEM_CODE         , REGID            , REGDATE      , ORDER_STATE
			FROM
			      T_ORDER
			WHERE
			      REQ_CUST_ID = #{custId}
			      <if test='deptId != null and !"".equals(deptId)'>
			         AND REQ_DEPT_ID = #{deptId}
			      </if>
			      <if test = "regid != null and regid != ''"> AND REGID = #{regid} </if> 
                  <if test = "fromDate != null and fromDate != '' and toDate != null and toDate != ''"> AND CONVERT(CHAR(10), ${dateSelector}, 23) BETWEEN #{fromDate} AND #{toDate} </if>       
                  <if test = "addrSearch != null and addrSearch != ''"> AND ${addrSelector} LIKE '%'+ #{addrSearch} +'%' </if>       
                  <if test = "orderState != null and orderState != ''">AND ORDER_STATE = #{orderState}</if>  
                  <if test = 'myOrder == "Y"'>AND REQ_STAFF_ID = #{loginId}</if>
		) A
		 INNER JOIN
		 T_ORDER_ALLOC B ON A.ORDER_ID = B.ORDER_ID 
		             AND A.REQ_CUST_ID = B.SELL_CUST_ID AND A.REQ_DEPT_ID = B.SELL_DEPT_ID 
		             AND A.CUST_ID = B.BUY_CUST_ID AND A.DEPT_ID = B.BUY_DEPT_ID
		 INNER JOIN
		  (
		     SELECT CUST_ID, DEPT_ID, CUST_NAME, MNG_CUST_ID, MNG_DEPT_ID
		     FROM
		           T_CUST_DTL
		     WHERE
		           MNG_CUST_ID = #{custId} 
		           <if test='deptId != null and !"".equals(deptId)'>
		              AND MNG_DEPT_ID = #{deptId}
		           </if>
		           AND SELL_BUY_SCTN = '02'
		  ) C ON A.CUST_ID = C.CUST_ID AND A.DEPT_ID = C.DEPT_ID AND A.REQ_CUST_ID = C.MNG_CUST_ID AND A.REQ_DEPT_ID = C.MNG_DEPT_ID
		 LEFT OUTER JOIN
		 T_ORDER_ALLOC D ON A.ORDER_ID = D.ORDER_ID AND ISNULL(D.DRIVER_ID, '') != '' AND ISNULL(D.VEHIC_ID, '') != ''
	</select>
	
	<select id="selectCustId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
   		SELECT
   				A.CUST_ID
   			  , A.DEPT_ID
   			  , A.CUST_NAME
   			  , B.DEPT_NAME
   			  , ISNULL(A.MANAGER, '') MANAGER
   		FROM
   			T_CUST_DTL A
   			INNER JOIN
   			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID
   		WHERE
   			A.MNG_CUST_ID = #{loginCustId}
   			AND A.MNG_DEPT_ID = #{loginDeptId}
   			AND A.SELL_BUY_SCTN = '02'
   			AND A.USE_YN = 'Y'
   			AND A.CUST_NAME + '||' + B.DEPT_NAME IN
   				<foreach collection="deptList" item="item" open="(" close=")" separator=",">
   					#{item.buyCustName} + '||' + #{item.buyDeptName}
   				</foreach>

   	</select>
   	
   	<insert id="insertOrderBundle" parameterType="java.util.HashMap">
		INSERT INTO
				T_ORDER 
				(
					ORDER_ID			  , REQ_CUST_ID			  , REQ_DEPT_ID			  , REQ_STAFF_ID				  , REQ_TEL
				  , CUST_ID				  , DEPT_ID				  , S_COM_NAME			  , S_SIDO						  , S_GUNGU
				  , S_DONG				  , S_ADDR				  , S_ADDR_DETAIL		  , S_DATE						  , S_STAFF
				  , S_TEL				  , E_COM_NAME			  , E_SIDO				  , E_GUNGU						  , E_DONG
				  , E_ADDR				  , E_ADDR_DETAIL		  , E_DATE				  , E_STAFF						  , E_TEL
				  , S_LAT				  , S_LON				  , E_LAT				  , E_LON						  , ORDER_STATE
				  , GOODS_NAME			  , GOODS_WEIGHT		  , S_WAY_CODE			  , E_WAY_CODE					  , MIX_YN
				  , MIX_SIZE			  , RETURN_YN			  , IN_OUT_SCTN			  , TRUCK_TYPE_CODE				  , CAR_TON_CODE
				  , CAR_TYPE_CODE		  , DISTANCE			  , TIME				  , REGID						  , REGDATE
				  , WEIGHT_UNIT_CODE	  , CHARGE_TYPE			  , ITEM_CODE
				)
		VALUES
		<foreach collection="orderList" item="item" index="index" separator=",">
				(
				  	#{item.orderId, jdbcType=NVARCHAR}
				  , #{loginCustId, jdbcType=NVARCHAR}
				  , #{loginDeptId, jdbcType=NVARCHAR}
				  , #{item.reqStaffId, jdbcType=NVARCHAR}
				  , #{item.reqTel, jdbcType=NVARCHAR}
				  , #{item.buyCustId, jdbcType=NVARCHAR}
				  , #{item.buyDeptId, jdbcType=NVARCHAR}
				  , #{item.sComName, jdbcType=NVARCHAR}
				  , #{item.sSido, jdbcType=NVARCHAR}
				  , #{item.sGungu, jdbcType=NVARCHAR}
				  , #{item.sDong, jdbcType=NVARCHAR}
				  , #{item.sAddr, jdbcType=NVARCHAR}
				  , #{item.sAddrDetail, jdbcType=NVARCHAR}
				  , #{item.sDate, jdbcType=NVARCHAR}
				  , #{item.sStaff, jdbcType=NVARCHAR}
				  , #{item.sTel, jdbcType=NVARCHAR}
				  , #{item.eComName, jdbcType=NVARCHAR}
				  , #{item.eSido, jdbcType=NVARCHAR}
				  , #{item.eGungu, jdbcType=NVARCHAR}
				  , #{item.eDong, jdbcType=NVARCHAR}
				  , #{item.eAddr, jdbcType=NVARCHAR}
				  , #{item.eAddrDetail, jdbcType=NVARCHAR}
				  , #{item.eDate, jdbcType=NVARCHAR}
				  , #{item.eStaff, jdbcType=NVARCHAR}
				  , #{item.eTel, jdbcType=NVARCHAR}
				  , #{item.sLat, jdbcType=NVARCHAR}
				  , #{item.sLon, jdbcType=NVARCHAR}
				  , #{item.eLat, jdbcType=NVARCHAR}
				  , #{item.eLon, jdbcType=NVARCHAR}
				  , '00'
				  , #{item.goodsName, jdbcType=NVARCHAR}
				  , CONVERT(float, #{item.goodsWeight, jdbcType=NVARCHAR}) * 1000
				  , (SELECT CODE FROM T_CODE  WHERE GCODE='WAY_TYPE_CD' AND CNAME=#{item.sWayName})
				  , (SELECT CODE FROM T_CODE  WHERE GCODE='WAY_TYPE_CD' AND CNAME=#{item.eWayName})
				  , CASE WHEN #{item.mixYn, jdbcType=NVARCHAR} = 'Y' THEN 'Y' ELSE 'N' END
				  , #{item.mixSize, jdbcType=NVARCHAR}
				  , CASE WHEN #{item.returnYn, jdbcType=NVARCHAR} = 'Y' THEN 'Y' ELSE 'N' END
				  , (SELECT CODE FROM T_CODE  WHERE GCODE='IN_OUT_SCTN' AND CNAME=#{item.inOutSctn})
				  , (SELECT CODE FROM T_CODE  WHERE GCODE='TRUCK_TYPE_CD' AND CNAME=#{item.truckTypeName})
				  , (SELECT CODE FROM T_CODE  WHERE GCODE='CAR_TON_CD' AND CNAME=#{item.carTonName})
				  , (SELECT CODE FROM T_CODE  WHERE GCODE='CAR_TYPE_CD' AND CNAME=#{item.carTypeName})
				  , #{item.distance, jdbcType=NVARCHAR}
				  , #{item.time, jdbcType=NVARCHAR}
				  , #{regId, jdbcType=NVARCHAR}
				  , GETDATE()
				  , #{item.weightUnitCode, jdbcType=NVARCHAR}
				  , '01'
				  , (SELECT ISNULL(MAX(CODE), '240000') CODE FROM T_CODE  WHERE GCODE='ITEM_CD' AND CNAME LIKE '%'+ #{item.itemCode} +'%')
				  
			)		  
		</foreach>		
	</insert>
   	
   	<insert id="insertOrderAllocBundle" parameterType="java.util.HashMap">
		<selectKey keyProperty="timestamp" resultType="String" order="BEFORE">
			SELECT convert(varchar, getDate(), 112) + replace(convert(varchar, getDate(), 108), ':', '')
		</selectKey>
		INSERT INTO
				T_ORDER_ALLOC
				(
					ALLOC_ID		, ORDER_ID		, SELL_CUST_ID	,	SELL_DEPT_ID	,	SELL_STAFF_ID
				  , BUY_CUST_ID		, BUY_DEPT_ID	, BUY_STAFF_ID	,	ALLOC_CHARGE	,	ALLOC_FEE
				  , ALLOC_STATE		, REGDATE		, REGID
				 )
		VALUES		
		<foreach collection="orderList" item="item" index="index" separator=",">
			(
				 	#{item.allocId, jdbcType=NVARCHAR}
				  , #{item.orderId, jdbcType=NVARCHAR}
				  , #{loginCustId, jdbcType=NVARCHAR}
				  , #{loginDeptId, jdbcType=NVARCHAR}
				  , #{item.reqStaffId, jdbcType=NVARCHAR}
				  , #{item.buyCustId, jdbcType=NVARCHAR}
				  , #{item.buyDeptId, jdbcType=NVARCHAR}
				  , #{item.buyStaff, jdbcType=NVARCHAR}
				  , #{item.allocCharge, jdbcType=NVARCHAR}
				  , '0'
				  , '10'
				  , GETDATE()
				  , #{regId, jdbcType=NVARCHAR}
			)
		</foreach>
	</insert>
	
	<select id="selectOmsOrderLocationList" parameterType="java.util.HashMap" resultType="omsOrderVO">
		SELECT AA.*
		FROM (
			SELECT 
				ROW_NUMBER() OVER(ORDER BY AAA.regdate desc) number
			  , AAA.*
		  	FROM 
		  		(
				SELECT
		             A.ORDER_ID         				orderId
		           , A.ORDER_STATE      				orderState
		           , A.S_COM_NAME      					sComName
		           , A.S_ADDR         					sAddr
		           , A.S_ADDR_DETAIL      				sAddrDetail
		           , CONVERT(CHAR(19), A.S_DATE, 20)    sDate
		           , CONVERT(CHAR(19), A.S_DATE, 23)    sDateDay
		           , A.E_COM_NAME      					eComName
		           , A.E_ADDR         					eAddr
		           , A.E_ADDR_DETAIL      				eAddrDetail
		           , CONVERT(CHAR(19), A.E_DATE, 20)    eDate 
		           , CONVERT(CHAR(19), A.E_DATE, 23)    eDateDay
		           , A.S_LAT            				sLat
		           , A.S_LON            				sLon
		           , A.E_LAT            				eLat
		           , A.E_LON            				eLon
		           , CASE WHEN A.MIX_YN = 'N' THEN '독차' ELSE '혼적' END mixName
		           , CASE WHEN A.RETURN_YN = 'N' THEN '편도' ELSE '왕복' END returnName
		           , A.CHARGE_TYPE      				chargeType
		           , CONVERT(CHAR(16), A.REGDATE, 20)   regdate 
		           , B.ALLOC_CHARGE      				buyCharge
		           , C.CUST_NAME         				buyCustName
		           , D.CAR_NUM         					carNum
		           , D.DRIVER_NAME      				driverName
		           , D.DRIVER_TEL      					driverTel
		           , (SELECT DEPT_NAME FROM T_CUST_DEPT WHERE CUST_ID = A.CUST_ID AND DEPT_ID = A.DEPT_ID) buyDeptName
           		   , (SELECT DEPT_NAME FROM T_CUST_DEPT WHERE CUST_ID = A.REQ_CUST_ID AND DEPT_ID = A.REQ_DEPT_ID) mngDeptName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'CAR_TON_CD' AND CODE = A.CAR_TON_CODE) carTonName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'ORDER_STATE_CD' AND CODE = A.ORDER_STATE) orderStateName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'CAR_TYPE_CD' AND CODE = A.CAR_TYPE_CODE) carTypeName
		           , (SELECT CNAME FROM T_CODE WHERE GCODE = 'CHARGE_TYPE_CD' AND CODE = A.CHARGE_TYPE) chargeTypeName
		        FROM    
		           (
		            SELECT
		                   ORDER_ID			 , REQ_CUST_ID			, REQ_DEPT_ID			, REQ_TEL			, REQ_ADDR
		                 , REQ_ADDR_DETAIL   , CUST_ID         		, DEPT_ID         		, IN_OUT_SCTN   	, TRUCK_TYPE_CODE
		                 , S_COM_NAME      	 , S_SIDO         		, S_GUNGU         		, S_DONG      		, S_ADDR
		                 , S_ADDR_DETAIL     , S_DATE	         	, S_STAFF 	 	        , S_TEL   	        , S_MEMO
		                 , E_COM_NAME      	 , E_SIDO         		, E_GUNGU       	  	, E_DONG      		, E_ADDR
		                 , E_ADDR_DETAIL   	 , E_DATE         		, E_STAFF         		, E_TEL         	, E_MEMO
		                 , S_LAT         	 , S_LON     	        , E_LAT         	    , E_LON     	    , GOODS_NAME
		                 , GOODS_WEIGHT   	 , WEIGHT_UNIT_CODE 	, GOODS_QTY         	, QTY_UNIT_CODE   	, S_WAY_CODE
		                 , E_WAY_CODE        , MIX_YN         		, MIX_SIZE         		, RETURN_YN     	, CAR_TON_CODE
		                 , CAR_TYPE_CODE   	 , CHARGE_TYPE      	, DISTANCE         		, TIME         		, REQ_MEMO
		                 , DRIVER_MEMO       , ITEM_CODE         	, REGID            		, REGDATE      		, ORDER_STATE
		                 , START_DATE		 , FINISH_DATE			, ENTER_DATE
		            FROM
		                  T_ORDER
		            WHERE
		                  REQ_CUST_ID = #{custId}
						  <if test='deptId != null and !"".equals(deptId)'>
		                     AND REQ_DEPT_ID = #{deptId}
		                  </if>
		                  AND REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59' 
		         ) A
		         INNER JOIN
		         T_ORDER_ALLOC B ON A.ORDER_ID = B.ORDER_ID 
		                     AND A.REQ_CUST_ID = B.SELL_CUST_ID AND A.REQ_DEPT_ID = B.SELL_DEPT_ID 
		                     AND A.CUST_ID = B.BUY_CUST_ID AND A.DEPT_ID = B.BUY_DEPT_ID
		         INNER JOIN
		          (
		             SELECT CUST_ID, DEPT_ID, CUST_NAME, MNG_CUST_ID, MNG_DEPT_ID
		             FROM
		                   T_CUST_DTL
		             WHERE
		                   MNG_CUST_ID = #{custId} 
		                   <if test='deptId != null and !"".equals(deptId)'>
		                      AND MNG_DEPT_ID = #{deptId} 
		                   </if>
		                   AND SELL_BUY_SCTN = '02'
		          ) C ON A.CUST_ID = C.CUST_ID AND A.DEPT_ID = C.DEPT_ID AND A.REQ_CUST_ID = C.MNG_CUST_ID AND A.REQ_DEPT_ID = C.MNG_DEPT_ID
		         LEFT OUTER JOIN
		         T_ORDER_ALLOC D ON A.ORDER_ID = D.ORDER_ID AND ISNULL(D.DRIVER_ID, '') != '' AND ISNULL(D.VEHIC_ID, '') != ''
		         ) AAA
		) AA
		WHERE number BETWEEN #{start} AND #{end}
		ORDER BY number ASC
	</select>
	
	<select id="selectOmsOrderLocationCnt" resultType="string" parameterType="java.util.HashMap">
		SELECT COUNT(1) retCnt
		FROM (
			SELECT
			       ORDER_ID        , REQ_CUST_ID   	, REQ_DEPT_ID    	, CUST_ID
			     , DEPT_ID       	, S_DATE 		, E_DATE			, E_STAFF
			     , E_TEL         , E_MEMO
			FROM
			      T_ORDER
			WHERE
			      REQ_CUST_ID = #{custId}
			      <if test='deptId != null and !"".equals(deptId)'>
              	     AND REQ_DEPT_ID = #{deptId}
              	  </if>
              AND REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59' 
		) A
		 INNER JOIN
		 T_ORDER_ALLOC B ON A.ORDER_ID = B.ORDER_ID 
		             AND A.REQ_CUST_ID = B.SELL_CUST_ID AND A.REQ_DEPT_ID = B.SELL_DEPT_ID 
		             AND A.CUST_ID = B.BUY_CUST_ID AND A.DEPT_ID = B.BUY_DEPT_ID
		 INNER JOIN
          (
             SELECT CUST_ID, DEPT_ID, CUST_NAME, MNG_CUST_ID, MNG_DEPT_ID
             FROM
                   T_CUST_DTL
             WHERE
                   MNG_CUST_ID = #{custId} 
                   <if test='deptId != null and !"".equals(deptId)'>
                      AND MNG_DEPT_ID = #{deptId} 
                   </if>
                   AND SELL_BUY_SCTN = '02'
          ) C ON A.CUST_ID = C.CUST_ID AND A.DEPT_ID = C.DEPT_ID AND A.REQ_CUST_ID = C.MNG_CUST_ID AND A.REQ_DEPT_ID = C.MNG_DEPT_ID
		 LEFT OUTER JOIN
		 T_ORDER_ALLOC D ON A.ORDER_ID = D.ORDER_ID AND ISNULL(D.DRIVER_ID, '') != '' AND ISNULL(D.VEHIC_ID, '') != ''
	</select>
	
	<select id="getOmsOrderSummary" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	    SELECT ISNULL(SUM(CASE WHEN A.ORDER_STATE IN ('00') THEN 1 ELSE 0 END),'00') registerOrderCount
		     , ISNULL(SUM(CASE WHEN A.ORDER_STATE IN ('01') THEN 1 ELSE 0 END),'00') dispatchOrderCount
			 , ISNULL(SUM(CASE WHEN A.ORDER_STATE IN ('12') THEN 1 ELSE 0 END),'00') entranceOrderCount
			 , ISNULL(SUM(CASE WHEN A.ORDER_STATE IN ('04') THEN 1 ELSE 0 END),'00') moveOrderCount
			 , ISNULL(SUM(CASE WHEN A.ORDER_STATE IN ('05') THEN 1 ELSE 0 END),'00') arrivallOrderCount
		     , ISNULL(SUM(CASE WHEN A.ORDER_STATE IN ('09') THEN 1 ELSE 0 END),'00') cancelOrderCount
		     , ISNULL(SUM(CASE WHEN A.ORDER_STATE IN ('01', '04', '05', '12') THEN B.ALLOC_CHARGE ELSE 0 END),'0') sumBuyCharge
<!-- 		     , ISNULL(SUM(CASE WHEN A.ORDER_STATE IN ('01', '04', '05', '12') THEN C.UNPAID_AMT ELSE 0 END),'0') sumAddCharge -->
		FROM 
		    T_ORDER A
		    INNER JOIN
		    T_ORDER_ALLOC B ON A.ORDER_ID = B.ORDER_ID 
<!-- 		    LEFT OUTER JOIN  -->
<!-- 		    (SELECT ORDER_ID, SUM(UNPAID_AMT) UNPAID_AMT FROM T_CALC  -->
<!-- 			WHERE SELL_BUY_SCTN = '01' -->
<!-- 			AND CALC_TYPE_CODE IN ('0023','0025','0371','0372','0294') -->
<!-- 			GROUP BY ORDER_ID) C ON A.ORDER_ID = C.ORDER_ID -->
		WHERE A.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59' 
			AND B.SELL_CUST_ID = #{custId} 
			<if test='deptId != null and !"".equals(deptId)'>
			   AND B.SELL_DEPT_ID = #{deptId}
			</if>
		    AND A.REQ_CUST_ID = B.SELL_CUST_ID AND A.REQ_DEPT_ID = B.SELL_DEPT_ID 
		    AND A.CUST_ID = B.BUY_CUST_ID AND A.DEPT_ID = B.BUY_DEPT_ID
   </select>
   
   <update id="orderWrite" statementType="CALLABLE" parameterType="java.util.HashMap">
		{call INSERT_ORDER_OMS(
						    #{mode}
						  , #{loginCustId}
						  , #{orderId}
						  , #{allocId}
						  , #{loginDeptId}	
						  , #{inOutSctn}		
						  , #{truckTypeCode}	
						  , #{sComName}		
						  , #{sSido}			
						  , #{sGungu}			
						  , #{sDong}			
						  , #{sAddr}			
						  , #{sAddrDetail}	
						  , #{sDateDay}	
						  , #{sDateTime}		
						  , #{sStaff}			
						  , #{sTel}			
						  , #{sMemo}			  
						  , #{eComName}		
						  , #{eSido}			
						  , #{eGungu}			
						  , #{eDong}			
						  , #{eAddr}			
						  , #{eAddrDetail}
						  , #{eDateDay}
						  , #{eDateTime}
						  , #{eStaff}
						  , #{eTel}
						  , #{eMemo}
						  , #{sLat}
						  , #{sLon}
						  , #{eLat}
						  , #{eLon}
						  , #{goodsName}		
						  , #{goodsWeight}	
						  , #{weightUnitCode}	
						  , #{goodsQty}		  
						  , #{qtyUnitCode}	
						  , #{sWayCode}		
						  , #{eWayCode}		
						  , #{mixYn}			
						  , #{mixSize}		
						  , #{returnYn}		
						  , #{carTonCode}		
						  , #{carTypeCode}	
						  , #{distance}		
						  , #{time}			
						  , #{reqMemo}		
						  , #{driverMemo}		
						  , #{itemCode}
						  , #{buyCharge}
						  , #{buyCustId}
						  , #{buyDeptId}
						  , #{buyStaffId}
						  , #{regId}
						  , #{dangerGoodsYn}
						  , #{chemicalsYn}
						  , #{foreignLicenseYn}
						  , #{buyAllocId, mode=OUT, jdbcType=NVARCHAR, javaType=String}
						  , #{sellOutAllocId, mode=OUT, jdbcType=NVARCHAR, javaType=String}
						  , #{retId, mode=OUT, jdbcType=NVARCHAR, javaType=String}
						  , #{retCode, mode=OUT, jdbcType=NVARCHAR, javaType=String}
						  ,	#{retMsg, mode=OUT, jdbcType=NVARCHAR, javaType=String})
		}
	</update>
</mapper>