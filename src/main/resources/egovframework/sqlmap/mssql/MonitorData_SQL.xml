<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="monitorDataNS">

	<!-- 배차운송 담당자-->
    <!-- 22.07.04 이건욱 사용자 조회 시 User 테이블을 보지 않음. -->
	<select id="selectOrderMonitorByUserId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT B.USER_ID userId, B.USER_NAME userName, C.DEPT_ID deptId, C.DEPT_NAME deptName
        FROM T_ORDER_ALLOC A
          INNER JOIN
            T_USER B ON B.USER_ID = A.BUY_STAFF_ID
          INNER JOIN
            T_CUST_DEPT C ON C.DEPT_ID = A.BUY_DEPT_ID
        WHERE A.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
        	AND A.BUY_CUST_ID = #{loginCustId}
        	<if test="deptId != null and !''.equals(deptId)">
              AND A.BUY_DEPT_ID = #{deptId}
            </if>
            <if test="userId != null and !''.equals(userId)">
              AND A.BUY_STAFF_ID = #{userId}
            </if>
        GROUP BY B.USER_ID, B.USER_NAME, C.DEPT_ID, C.DEPT_NAME
	</select>
  
	<!-- 배차운송(월)-->
	<select id="selectOrderMonitorMonthly" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT C.USER_ID userId, C.USER_NAME userName, D.DEPT_ID deptId, D.DEPT_NAME deptName, CONVERT(VARCHAR(10), A.REGDATE, 23) regDate, '전체' orderState, COUNT(1) orderCount 
        FROM T_ORDER_ALLOC A
          INNER JOIN
            T_ORDER B ON B.ORDER_ID = A.ORDER_ID
          INNER JOIN
            T_USER C ON C.USER_ID = A.BUY_STAFF_ID
          INNER JOIN
            T_CUST_DEPT D ON D.DEPT_ID = C.DEPT_ID
        WHERE A.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
          AND A.BUY_CUST_ID = #{loginCustId}
          <if test="deptId != null and !''.equals(deptId)">
            AND A.BUY_DEPT_ID = #{deptId}
          </if>
          <if test="userId != null and !''.equals(userId)">
            AND A.BUY_STAFF_ID = #{userId}
          </if>
          AND B.ORDER_STATE != '09'
        GROUP BY C.USER_ID, C.USER_NAME, D.DEPT_ID, D.DEPT_NAME, CONVERT(VARCHAR(10), A.REGDATE, 23)
        UNION ALL
        SELECT C.USER_ID userId, C.USER_NAME userName, D.DEPT_ID deptId, D.DEPT_NAME deptName, CONVERT(VARCHAR(10), A.REGDATE, 23) regDate, CASE B.ORDER_STATE WHEN '09' THEN '취소' WHEN '00' THEN '접수' WHEN '05' THEN '도착' ELSE '진행' END orderState, COUNT(1) orderCount 
        FROM T_ORDER_ALLOC A
          INNER JOIN
            T_ORDER B ON B.ORDER_ID = A.ORDER_ID
          INNER JOIN
            T_USER C ON C.USER_ID = A.BUY_STAFF_ID
          INNER JOIN
            T_CUST_DEPT D ON D.DEPT_ID = C.DEPT_ID
        WHERE A.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
          AND A.BUY_CUST_ID = #{loginCustId}
          <if test="deptId != null and !''.equals(deptId)">
            AND A.BUY_DEPT_ID = #{deptId}
          </if>
          <if test="userId != null and !''.equals(userId)">
            AND A.BUY_STAFF_ID = #{userId}
          </if>
          <if test="stateList != null and !''.equals(stateList)">
            AND B.ORDER_STATE IN
            <foreach collection="stateList" item="item" index="index" separator="," open="(" close=")">
              #{item}
            </foreach>
          </if>
        GROUP BY C.USER_ID, C.USER_NAME, D.DEPT_ID, D.DEPT_NAME, CONVERT(VARCHAR(10), A.REGDATE, 23), B.ORDER_STATE
        UNION ALL
        SELECT C.USER_ID userId, C.USER_NAME userName, D.DEPT_ID deptId, D.DEPT_NAME deptName, CONVERT(VARCHAR(10), A.REGDATE, 23) regDate, '입력지연' orderState, COUNT(1) orderCount 
        FROM T_ORDER_ALLOC A
        INNER JOIN
          T_ORDER B ON B.ORDER_ID = A.ORDER_ID
        INNER JOIN
          T_USER C ON C.USER_ID = A.BUY_STAFF_ID
        INNER JOIN
          T_CUST_DEPT D ON D.DEPT_ID = C.DEPT_ID
        WHERE A.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
          AND A.BUY_CUST_ID = #{loginCustId}
          <if test="deptId != null and !''.equals(deptId)">
            AND A.BUY_DEPT_ID = #{deptId}
          </if>
          <if test="userId != null and !''.equals(userId)">
            AND A.BUY_STAFF_ID = #{userId}
          </if>
          AND A.REGDATE > DATEADD(HOUR, 1, B.S_DATE)
          AND B.ORDER_STATE != '09'
        GROUP BY C.USER_ID, C.USER_NAME, D.DEPT_ID, D.DEPT_NAME, CONVERT(VARCHAR(10), A.REGDATE, 23)
	</select>

	<!-- 배차운송(월 합계)-->
	<select id="selectOrderMonitorMonthlySum" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONVERT(VARCHAR(10), A.REGDATE, 23) regDate, '100' orderState, COUNT(1) orderCount 
        FROM T_ORDER_ALLOC A
          INNER JOIN
            T_ORDER B ON B.ORDER_ID = A.ORDER_ID
          INNER JOIN
            T_USER C ON C.USER_ID = A.BUY_STAFF_ID
          INNER JOIN
            T_CUST_DEPT D ON D.DEPT_ID = C.DEPT_ID
        WHERE A.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
          AND A.BUY_CUST_ID = #{loginCustId}
          <if test="deptId != null and !''.equals(deptId)">
            AND A.BUY_DEPT_ID = #{deptId}
          </if>
          <if test="userId != null and !''.equals(userId)">
            AND A.BUY_STAFF_ID = #{userId}
          </if>
          AND B.ORDER_STATE != '09'
        GROUP BY CONVERT(VARCHAR(10), A.REGDATE, 23)
        UNION ALL
        SELECT CONVERT(VARCHAR(10), A.REGDATE, 23) regDate, CASE WHEN B.ORDER_STATE IN ('00', '05', '09') THEN B.ORDER_STATE ELSE '01' END orderState, COUNT(1) orderCount  
        FROM T_ORDER_ALLOC A
          INNER JOIN
            T_ORDER B ON B.ORDER_ID = A.ORDER_ID
          INNER JOIN
            T_USER C ON C.USER_ID = A.BUY_STAFF_ID
          INNER JOIN
            T_CUST_DEPT D ON D.DEPT_ID = C.DEPT_ID
        WHERE A.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
          AND A.BUY_CUST_ID = #{loginCustId}
          <if test="deptId != null and !''.equals(deptId)">
            AND A.BUY_DEPT_ID = #{deptId}
          </if>
          <if test="userId != null and !''.equals(userId)">
            AND A.BUY_STAFF_ID = #{userId}
          </if>
          <if test="stateList != null and !''.equals(stateList)">
            AND B.ORDER_STATE IN
            <foreach collection="stateList" item="item" index="index" separator="," open="(" close=")">
              #{item}
            </foreach>
          </if>
        GROUP BY CONVERT(VARCHAR(10), A.REGDATE, 23), B.ORDER_STATE
        UNION ALL
        SELECT CONVERT(VARCHAR(10), A.REGDATE, 23) regDate, '99' orderState, COUNT(1) orderCount
        FROM T_ORDER_ALLOC A
        INNER JOIN
          T_ORDER B ON B.ORDER_ID = A.ORDER_ID
        INNER JOIN
          T_USER C ON C.USER_ID = A.BUY_STAFF_ID
        INNER JOIN
          T_CUST_DEPT D ON D.DEPT_ID = C.DEPT_ID
        WHERE A.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
          AND A.BUY_CUST_ID = #{loginCustId}
          <if test="deptId != null and !''.equals(deptId)">
            AND A.BUY_DEPT_ID = #{deptId}
          </if>
          <if test="userId != null and !''.equals(userId)">
            AND A.BUY_STAFF_ID = #{userId}
          </if>
          AND A.REGDATE > DATEADD(HOUR, 1, B.S_DATE)
          AND B.ORDER_STATE != '09'
        GROUP BY CONVERT(VARCHAR(10), A.REGDATE, 23)
	</select>

	<!-- 배차운송(년) -->
	<select id="selectOrderMonitorYear" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT A.USER_ID userId, A.USER_NAME userName, B.DEPT_NAME deptName, CONVERT(VARCHAR(7), D.REGDATE, 23) regdate, '전체' orderState, COUNT(1) orderCount 
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER
				WHERE CUST_ID = #{loginCustId}
					 <if test="deptId != null and !''.equals(deptId)">
					 	AND DEPT_ID = #{deptId}
					 </if>
					 <if test="userId != null and !''.equals(userId)">
					 	AND USER_ID = #{userId}
					 </if>
			) A
			INNER JOIN
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			LEFT OUTER JOIN 
			T_ORDER D ON C.ORDER_ID = D.ORDER_ID  
		WHERE D.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'	AND D.ORDER_STATE != '09'
		GROUP BY A.USER_ID,  A.USER_NAME, B.DEPT_NAME, CONVERT(VARCHAR(7), D.REGDATE, 23)
		UNION ALL 
		SELECT A.USER_ID userId, A.USER_NAME userName, B.DEPT_NAME deptName, CONVERT(VARCHAR(7), D.REGDATE, 23) regdate,
			 <!-- , CASE WHEN D.ORDER_STATE IN ('00', '05', '09') THEN D.ORDER_STATE ELSE '01' END orderState -->
			 CASE D.ORDER_STATE WHEN '09' THEN '취소' WHEN '00' THEN '접수' WHEN '05' THEN '도착' ELSE '진행' END 
			 , COUNT(1) orderCount 
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId}
					 <if test="deptId != null and !''.equals(deptId)">
					 	AND DEPT_ID = #{deptId}
					 </if>
					 <if test="userId != null and !''.equals(userId)">
					 	AND USER_ID = #{userId}
					 </if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			LEFT OUTER JOIN 
			T_ORDER D ON C.ORDER_ID = D.ORDER_ID  
		WHERE D.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
			<if test="stateList != null and !''.equals(stateList)">
				AND D.ORDER_STATE IN
				<foreach collection="stateList" item="item" index="index" separator="," open="(" close=")">
					#{item}
				</foreach>
			</if>
		GROUP BY  A.USER_ID, A.USER_NAME, B.DEPT_NAME, CONVERT(VARCHAR(7), D.REGDATE, 23), D.ORDER_STATE 
		UNION ALL
		SELECT A.USER_ID, A.USER_NAME, B.DEPT_NAME, CONVERT(VARCHAR(7), D.REGDATE, 23) regdate, '입력지연', COUNT(1) 
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId}
					 <if test="deptId != null and !''.equals(deptId)">
					 	AND DEPT_ID = #{deptId}
					 </if>
					 <if test="userId != null and !''.equals(userId)">
					 	AND USER_ID = #{userId}
					 </if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			LEFT OUTER JOIN 
			T_ORDER D ON C.ORDER_ID = D.ORDER_ID  
		WHERE D.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'	AND D.ORDER_STATE != '09'
			AND DATEADD(HOUR, 1, D.S_DATE) &lt; D.REGDATE 
		GROUP BY A.USER_ID,  A.USER_NAME, B.DEPT_NAME, CONVERT(VARCHAR(7), D.REGDATE, 23)
	</select>

	<!-- 배차운송(년 합계) -->
	<select id="selectOrderMonitorYearSum" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT CONVERT(VARCHAR(7), D.REGDATE, 23) regdate, '100' orderState, COUNT(1) orderCount 
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId}
					 <if test="deptId != null and !''.equals(deptId)">
					 	AND DEPT_ID = #{deptId}
					 </if>
					 <if test="userId != null and !''.equals(userId)">
					 	AND USER_ID = #{userId}
					 </if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			LEFT OUTER JOIN 
			T_ORDER D ON C.ORDER_ID = D.ORDER_ID  
		WHERE D.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59' AND D.ORDER_STATE != '09'
		GROUP BY CONVERT(VARCHAR(7), D.REGDATE, 23)
		UNION ALL 
		SELECT CONVERT(VARCHAR(7), D.REGDATE, 23) regdate
			 , CASE WHEN D.ORDER_STATE IN ('00', '05', '09') THEN D.ORDER_STATE ELSE '01' END orderState
			 , COUNT(1) orderCount 
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId}
					 <if test="deptId != null and !''.equals(deptId)">
					 	AND DEPT_ID = #{deptId}
					 </if>
					 <if test="userId != null and !''.equals(userId)">
					 	AND USER_ID = #{userId}
					 </if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			LEFT OUTER JOIN 
			T_ORDER D ON C.ORDER_ID = D.ORDER_ID  
		WHERE D.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
			<if test='stateList != null and !"".equals(stateList)'>
				AND D.ORDER_STATE IN
				<foreach collection="stateList" item="item" index="index" separator="," open="(" close=")">
					#{item}
				</foreach>
			</if>
		GROUP BY CONVERT(VARCHAR(7), D.REGDATE, 23), D.ORDER_STATE 
		UNION ALL
		SELECT CONVERT(VARCHAR(7), D.REGDATE, 23) regdate, '99', COUNT(1) 
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId}
					 <if test="deptId != null and !''.equals(deptId)">
					 	AND DEPT_ID = #{deptId}
					 </if>
					 <if test="userId != null and !''.equals(userId)">
					 	AND USER_ID = #{userId}
					 </if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			LEFT OUTER JOIN 
			T_ORDER D ON C.ORDER_ID = D.ORDER_ID  
		WHERE D.REGDATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'	AND D.ORDER_STATE != '09'
			AND DATEADD(HOUR, 1, D.S_DATE) &lt; D.REGDATE 
		GROUP BY CONVERT(VARCHAR(7), D.REGDATE, 23)
	</select>
	
	<!-- 거래처손익(거래처) -->
	<select id="selectProfitByCustId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT D.CUST_ID custId, D.CUST_NAME custName, D.DEPT_ID deptId			
		FROM
			(
				SELECT ORDER_ID, ALLOC_ID, BUY_CUST_ID, BUY_DEPT_ID, SELL_CUST_ID, SELL_DEPT_ID, ALLOC_CHARGE 
			 	FROM T_ORDER_ALLOC
			 	WHERE BUY_CUST_ID = #{loginCustId} 
					<if test="deptId != null and !''.equals(deptId)">
						AND BUY_DEPT_ID = #{deptId}
					</if>
					<if test="sCustId != null and !''.equals(sCustId)">
						AND SELL_CUST_ID = #{sCustId} AND SELL_DEPT_ID = #{sDeptId}
					</if>
			 ) A
			 INNER JOIN
			(
				SELECT ORDER_ID
				FROM T_ORDER
				WHERE ORDER_STATE NOT IN ('00', '09')
					AND ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59' 
			) B ON A.ORDER_ID = B.ORDER_ID	 
			 INNER JOIN  
			 T_ORDER_ALLOC C ON A.ORDER_ID = C.ORDER_ID AND A.BUY_CUST_ID = C.SELL_CUST_ID AND A.BUY_DEPT_ID = C.SELL_DEPT_ID 
			 INNER JOIN 
			 T_CUST_DTL D ON A.SELL_CUST_ID = D.CUST_ID AND A.SELL_DEPT_ID = D.DEPT_ID AND A.BUY_CUST_ID = D.MNG_CUST_ID AND A.BUY_DEPT_ID = D.MNG_DEPT_ID 
			 LEFT OUTER JOIN 
			 T_ORDER_ALLOC_ADD E ON A.ALLOC_ID = E.ALLOC_ID
			 LEFT OUTER JOIN 
			 T_ORDER_ALLOC_ADD F ON C.ALLOC_ID = F.ALLOC_ID
		GROUP BY D.CUST_ID , D.CUST_NAME, D.DEPT_ID
		ORDER BY  SUM(ISNULL(A.ALLOC_CHARGE, 0)) + SUM(ISNULL(E.ADD_CHARGE, 0)) DESC, SUM(ISNULL(C.ALLOC_CHARGE, 0)) + SUM(ISNULL(F.ADD_CHARGE, 0)) DESC
	</select>

	<!-- 거래처손익(월) -->
	<select id="selectProfitByCustMonth" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT D.CUST_ID custId, D.CUST_NAME custName, D.DEPT_ID deptId		
		     , CONVERT(VARCHAR(10), B.ALLOC_DATE, 23) allocDate
		     , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN B.CHARGE_TYPE = '01' THEN A.ALLOC_CHARGE ELSE A.ALLOC_FEE END), 0)) + SUM(ISNULL(E.ADD_CHARGE, 0))) sellAmt
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN B.CHARGE_TYPE = '01' THEN C.ALLOC_CHARGE ELSE 0 END), 0)) + SUM(ISNULL(F.ADD_CHARGE, 0))) buyAmt
		FROM
			(
				SELECT ORDER_ID, ALLOC_ID, BUY_CUST_ID, BUY_DEPT_ID, SELL_CUST_ID, SELL_DEPT_ID, ALLOC_CHARGE, ALLOC_FEE
			 	FROM T_ORDER_ALLOC
			 	WHERE BUY_CUST_ID = #{loginCustId} 
					<if test="deptId != null and !''.equals(deptId)">
						AND BUY_DEPT_ID = #{deptId}
					</if>
					<if test="sCustId != null and !''.equals(sCustId)">
						AND SELL_CUST_ID = #{sCustId} AND SELL_DEPT_ID = #{sDeptId}
					</if>
			 ) A
			 INNER JOIN
			(
				SELECT ORDER_ID, ALLOC_DATE, CHARGE_TYPE
				FROM T_ORDER
				WHERE ORDER_STATE NOT IN ('00', '09')
					AND ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59' 
			) B ON A.ORDER_ID = B.ORDER_ID	 
			 INNER JOIN  
			 T_ORDER_ALLOC C ON A.ORDER_ID = C.ORDER_ID AND A.BUY_CUST_ID = C.SELL_CUST_ID AND A.BUY_DEPT_ID = C.SELL_DEPT_ID 
			 INNER JOIN 
			 T_CUST_DTL D ON A.SELL_CUST_ID = D.CUST_ID AND A.SELL_DEPT_ID = D.DEPT_ID AND A.BUY_CUST_ID = D.MNG_CUST_ID AND A.BUY_DEPT_ID = D.MNG_DEPT_ID 
			 LEFT OUTER JOIN 
			 T_ORDER_ALLOC_ADD E ON A.ALLOC_ID = E.ALLOC_ID
			 LEFT OUTER JOIN 
			 T_ORDER_ALLOC_ADD F ON C.ALLOC_ID = F.ALLOC_ID
		GROUP BY D.CUST_ID , D.CUST_NAME, D.DEPT_ID, CONVERT(VARCHAR(10), B.ALLOC_DATE, 23)
		ORDER BY CONVERT(VARCHAR(10), B.ALLOC_DATE, 23), D.CUST_NAME
	</select>

	<!-- 거래처손익(년) -->
	<select id="selectProfitByCustYear" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT D.CUST_ID custId, D.CUST_NAME custName, D.DEPT_ID deptId		
     		 , CONVERT(VARCHAR(7), B.ALLOC_DATE, 23) allocDate
		     , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN B.CHARGE_TYPE = '01' THEN A.ALLOC_CHARGE ELSE A.ALLOC_FEE END), 0)) + SUM(ISNULL(E.ADD_CHARGE, 0))) sellAmt
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN B.CHARGE_TYPE = '01' THEN C.ALLOC_CHARGE ELSE 0 END), 0)) + SUM(ISNULL(F.ADD_CHARGE, 0))) buyAmt
		FROM
			(
				SELECT ORDER_ID, ALLOC_ID, BUY_CUST_ID, BUY_DEPT_ID, SELL_CUST_ID, SELL_DEPT_ID, ALLOC_CHARGE, ALLOC_FEE 
			 	FROM T_ORDER_ALLOC
			 	WHERE BUY_CUST_ID = #{loginCustId} 
					<if test="deptId != null and !''.equals(deptId)">
						AND BUY_DEPT_ID = #{deptId}
					</if>
					<if test="sCustId != null and !''.equals(sCustId)">
						AND SELL_CUST_ID = #{sCustId} AND SELL_DEPT_ID = #{sDeptId}
					</if>
			 ) A
			 INNER JOIN
			(
				SELECT ORDER_ID, ALLOC_DATE, CHARGE_TYPE
				FROM T_ORDER
				WHERE ORDER_STATE NOT IN ('00', '09')
					AND ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59' 
			) B ON A.ORDER_ID = B.ORDER_ID	 
			 INNER JOIN  
			 T_ORDER_ALLOC C ON A.ORDER_ID = C.ORDER_ID AND A.BUY_CUST_ID = C.SELL_CUST_ID AND A.BUY_DEPT_ID = C.SELL_DEPT_ID 
			 INNER JOIN 
			 T_CUST_DTL D ON A.SELL_CUST_ID = D.CUST_ID AND A.SELL_DEPT_ID = D.DEPT_ID AND A.BUY_CUST_ID = D.MNG_CUST_ID AND A.BUY_DEPT_ID = D.MNG_DEPT_ID 
			 LEFT OUTER JOIN 
			 T_ORDER_ALLOC_ADD E ON A.ALLOC_ID = E.ALLOC_ID
			 LEFT OUTER JOIN 
			 T_ORDER_ALLOC_ADD F ON C.ALLOC_ID = F.ALLOC_ID
		GROUP BY D.CUST_ID , D.CUST_NAME, D.DEPT_ID, CONVERT(VARCHAR(7), B.ALLOC_DATE, 23)
		ORDER BY CONVERT(VARCHAR(7), B.ALLOC_DATE, 23), D.CUST_NAME
	</select>
	
	<!-- 부서별 손익 -->
	<select id="selectProfitDeptId" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT A.USER_NAME userName, A.USER_ID userId, B.DEPT_ID deptId, B.DEPT_NAME deptName, 1 as sort
		FROM T_USER A
			 INNER JOIN
			 T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID AND A.USE_YN = 'Y' AND B.USE_YN = 'Y'
		WHERE A.CUST_ID = #{loginCustId}
		<if test="deptId != null and !''.equals(deptId)">
		 	AND A.DEPT_ID = #{deptId}
		</if>
		UNION ALL 
		SELECT '소계' AS userName, '소계' userId, DEPT_ID AS deptId, DEPT_NAME AS deptName, 2 as sort
		FROM T_CUST_DEPT
		WHERE CUST_ID = #{loginCustId}
	 	<if test="deptId != null and !''.equals(deptId)">
	 		AND DEPT_ID = #{deptId}
	 	</if>
		AND USE_YN = 'Y'
		ORDER BY B.DEPT_NAME ASC, sort ASC, userName ASC
	</select>
	
	<select id="selectProfitDeptMonth" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT A.USER_ID 	userId
			 , B.DEPT_NAME 	deptName
			 , A.DEPT_ID deptId
			 , CONVERT(VARCHAR(10), E.ALLOC_DATE, 23) allocDate
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN C.ALLOC_CHARGE ELSE C.ALLOC_FEE END),0)) + SUM(ISNULL(CONVERT(BIGINT, F.ADD_CHARGE),0))) sellCharge
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN D.ALLOC_CHARGE ELSE 0 END),0)) + SUM(ISNULL(CONVERT(BIGINT, G.ADD_CHARGE),0))) buyCharge
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId} AND USE_YN = 'Y'
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND DEPT_ID = #{deptId}
			 	</if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID AND B.USE_YN = 'Y'
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_ID, BUY_CUST_ID, BUY_DEPT_ID, BUY_STAFF_ID, ALLOC_CHARGE, ALLOC_FEE
			FROM T_ORDER_ALLOC 
			WHERE BUY_CUST_ID = #{loginCustId}				
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND BUY_DEPT_ID = #{deptId}
			 	</if>
			 ) C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			INNER JOIN
			T_ORDER_ALLOC D ON A.CUST_ID = D.SELL_CUST_ID AND A.DEPT_ID = D.SELL_DEPT_ID AND C.ORDER_ID = D.ORDER_ID
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_DATE, CHARGE_TYPE
			FROM T_ORDER 
			WHERE ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
				AND ORDER_STATE IN ('01', '04', '05', '12')) E ON C.ORDER_ID = E.ORDER_ID  
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD F ON C.ALLOC_ID = F.ALLOC_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD G ON D.ALLOC_ID = G.ALLOC_ID
		GROUP BY A.DEPT_ID, A.USER_ID, B.DEPT_NAME, CONVERT(VARCHAR(10), E.ALLOC_DATE, 23)
		UNION ALL
		SELECT '소계' 	userId
			 , B.DEPT_NAME 	deptName
			 , A.DEPT_ID deptId
			 , CONVERT(VARCHAR(10), E.ALLOC_DATE, 23) allocDate
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN C.ALLOC_CHARGE ELSE C.ALLOC_FEE END),0)) + SUM(ISNULL(CONVERT(BIGINT, F.ADD_CHARGE),0))) sellCharge
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN D.ALLOC_CHARGE ELSE 0 END),0)) + SUM(ISNULL(CONVERT(BIGINT, G.ADD_CHARGE),0))) buyCharge
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId} AND USE_YN = 'Y'
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND DEPT_ID = #{deptId}
			 	</if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID AND B.USE_YN = 'Y'
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_ID, BUY_CUST_ID, BUY_DEPT_ID, BUY_STAFF_ID, ALLOC_CHARGE, ALLOC_FEE
			FROM T_ORDER_ALLOC 
			WHERE BUY_CUST_ID = #{loginCustId}				
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND BUY_DEPT_ID = #{deptId}
			 	</if>
			 ) C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			INNER JOIN
			T_ORDER_ALLOC D ON A.CUST_ID = D.SELL_CUST_ID AND A.DEPT_ID = D.SELL_DEPT_ID AND C.ORDER_ID = D.ORDER_ID
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_DATE, CHARGE_TYPE
			FROM T_ORDER 
			WHERE ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
				AND ORDER_STATE IN ('01', '04', '05', '12')) E ON C.ORDER_ID = E.ORDER_ID  
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD F ON C.ALLOC_ID = F.ALLOC_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD G ON D.ALLOC_ID = G.ALLOC_ID
		GROUP BY A.DEPT_ID, B.DEPT_NAME, CONVERT(VARCHAR(10), E.ALLOC_DATE, 23)
	</select>
	
	<select id="selectProfitDeptMonthSum" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 
			   '합계' 	deptName
			 , CONVERT(VARCHAR(10), E.ALLOC_DATE, 23) allocDate
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN C.ALLOC_CHARGE ELSE C.ALLOC_FEE END),0)) + SUM(ISNULL(CONVERT(BIGINT, F.ADD_CHARGE),0))) sellCharge
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN D.ALLOC_CHARGE ELSE 0 END),0)) + SUM(ISNULL(CONVERT(BIGINT, G.ADD_CHARGE),0))) buyCharge
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId} AND USE_YN = 'Y'
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND DEPT_ID = #{deptId}
			 	</if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID AND B.USE_YN = 'Y'
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_ID, BUY_CUST_ID, BUY_DEPT_ID, BUY_STAFF_ID, ALLOC_CHARGE, ALLOC_FEE
			FROM T_ORDER_ALLOC 
			WHERE BUY_CUST_ID = #{loginCustId}				
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND BUY_DEPT_ID = #{deptId}
			 	</if>
			 ) C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			INNER JOIN
			T_ORDER_ALLOC D ON A.CUST_ID = D.SELL_CUST_ID AND A.DEPT_ID = D.SELL_DEPT_ID AND C.ORDER_ID = D.ORDER_ID
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_DATE, CHARGE_TYPE
			FROM T_ORDER 
			WHERE ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
				AND ORDER_STATE IN ('01', '04', '05', '12')) E ON C.ORDER_ID = E.ORDER_ID  
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD F ON C.ALLOC_ID = F.ALLOC_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD G ON D.ALLOC_ID = G.ALLOC_ID
		GROUP BY CONVERT(VARCHAR(10), E.ALLOC_DATE, 23)
	</select>
	
	<select id="selectProfitDeptYear" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT A.USER_ID 	userId
			 , B.DEPT_NAME 	deptName
			 , A.DEPT_ID deptId
			 , CONVERT(VARCHAR(7), E.ALLOC_DATE, 23) allocDate
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN C.ALLOC_CHARGE ELSE C.ALLOC_FEE END),0)) + SUM(ISNULL(CONVERT(BIGINT, F.ADD_CHARGE),0))) sellCharge
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN D.ALLOC_CHARGE ELSE 0 END),0)) + SUM(ISNULL(CONVERT(BIGINT, G.ADD_CHARGE),0))) buyCharge
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId} AND USE_YN = 'Y'
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND DEPT_ID = #{deptId}
			 	</if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID AND B.USE_YN = 'Y'
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_ID, BUY_CUST_ID, BUY_DEPT_ID, BUY_STAFF_ID, ALLOC_CHARGE, ALLOC_FEE
			FROM T_ORDER_ALLOC 
			WHERE BUY_CUST_ID = #{loginCustId}				
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND BUY_DEPT_ID = #{deptId}
			 	</if>
			 ) C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			INNER JOIN
			T_ORDER_ALLOC D ON A.CUST_ID = D.SELL_CUST_ID AND A.DEPT_ID = D.SELL_DEPT_ID AND C.ORDER_ID = D.ORDER_ID
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_DATE, CHARGE_TYPE 
			FROM T_ORDER 
			WHERE ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
				AND ORDER_STATE IN ('01', '04', '05', '12')) E ON C.ORDER_ID = E.ORDER_ID  
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD F ON C.ALLOC_ID = F.ALLOC_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD G ON D.ALLOC_ID = G.ALLOC_ID
		GROUP BY A.DEPT_ID, A.USER_ID, B.DEPT_NAME, CONVERT(VARCHAR(7), E.ALLOC_DATE, 23)
		UNION ALL
		SELECT '소계' 	userId
			 , B.DEPT_NAME 	deptName
			 , A.DEPT_ID deptId
			 , CONVERT(VARCHAR(7), E.ALLOC_DATE, 23) allocDate
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN C.ALLOC_CHARGE ELSE C.ALLOC_FEE END),0)) + SUM(ISNULL(CONVERT(BIGINT, F.ADD_CHARGE),0))) sellCharge
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN D.ALLOC_CHARGE ELSE 0 END),0)) + SUM(ISNULL(CONVERT(BIGINT, G.ADD_CHARGE),0))) buyCharge
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId} AND USE_YN = 'Y'
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND DEPT_ID = #{deptId}
			 	</if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID AND B.USE_YN = 'Y'
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_ID, BUY_CUST_ID, BUY_DEPT_ID, BUY_STAFF_ID, ALLOC_CHARGE, ALLOC_FEE
			FROM T_ORDER_ALLOC 
			WHERE BUY_CUST_ID = #{loginCustId}				
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND BUY_DEPT_ID = #{deptId}
			 	</if>
			 ) C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			INNER JOIN
			T_ORDER_ALLOC D ON A.CUST_ID = D.SELL_CUST_ID AND A.DEPT_ID = D.SELL_DEPT_ID AND C.ORDER_ID = D.ORDER_ID
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_DATE, CHARGE_TYPE 
			FROM T_ORDER 
			WHERE ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
				AND ORDER_STATE IN ('01', '04', '05', '12')) E ON C.ORDER_ID = E.ORDER_ID  
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD F ON C.ALLOC_ID = F.ALLOC_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD G ON D.ALLOC_ID = G.ALLOC_ID
		GROUP BY A.DEPT_ID, B.DEPT_NAME, CONVERT(VARCHAR(7), E.ALLOC_DATE, 23)
	</select>
	
	<select id="selectProfitDeptYearSum" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		SELECT 
			   '합계' 	deptName
			 , CONVERT(VARCHAR(7), E.ALLOC_DATE, 23) allocDate
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN C.ALLOC_CHARGE ELSE C.ALLOC_FEE END),0)) + SUM(ISNULL(CONVERT(BIGINT, F.ADD_CHARGE),0))) sellCharge
			 , (SUM(ISNULL(CONVERT(BIGINT, CASE WHEN E.CHARGE_TYPE = '01' THEN D.ALLOC_CHARGE ELSE 0 END),0)) + SUM(ISNULL(CONVERT(BIGINT, G.ADD_CHARGE),0))) buyCharge
		FROM (
				SELECT CUST_ID, DEPT_ID, USER_ID, USER_NAME 
				FROM T_USER 
				WHERE CUST_ID = #{loginCustId} AND USE_YN = 'Y'
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND DEPT_ID = #{deptId}
			 	</if>
			) A
			INNER JOIN 
			T_CUST_DEPT B ON A.DEPT_ID = B.DEPT_ID AND B.USE_YN = 'Y'
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_ID, BUY_CUST_ID, BUY_DEPT_ID, BUY_STAFF_ID, ALLOC_CHARGE, ALLOC_FEE
			FROM T_ORDER_ALLOC 
			WHERE BUY_CUST_ID = #{loginCustId}				
			 	<if test="deptId != null and !''.equals(deptId)">
			 		AND BUY_DEPT_ID = #{deptId}
			 	</if>
			 ) C ON A.CUST_ID = C.BUY_CUST_ID AND A.DEPT_ID = C.BUY_DEPT_ID AND A.USER_ID = C.BUY_STAFF_ID 
			INNER JOIN
			T_ORDER_ALLOC D ON A.CUST_ID = D.SELL_CUST_ID AND A.DEPT_ID = D.SELL_DEPT_ID AND C.ORDER_ID = D.ORDER_ID
			INNER JOIN 
		   (SELECT ORDER_ID, ALLOC_DATE, CHARGE_TYPE 
			FROM T_ORDER 
			WHERE ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
				AND ORDER_STATE IN ('01', '04', '05', '12')) E ON C.ORDER_ID = E.ORDER_ID  
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD F ON C.ALLOC_ID = F.ALLOC_ID
			LEFT OUTER JOIN 
			T_ORDER_ALLOC_ADD G ON D.ALLOC_ID = G.ALLOC_ID
		GROUP BY CONVERT(VARCHAR(7), E.ALLOC_DATE, 23)
	</select>	
</mapper>
