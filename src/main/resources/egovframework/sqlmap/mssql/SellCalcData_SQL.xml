<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sellCalcDataNS">
  <select id="selectSellCalcList" parameterType="java.util.HashMap" resultType="sellCalcVO">
    SELECT
      T_SELL_CALC.*
    FROM (
    	SELECT
          ROW_NUMBER() OVER(ORDER BY ALLOC_DATE, ORDER_ID DESC) AS number
          , ORDER_ID AS orderId
          , FINISH_YN AS finishYn
          , FINISH_USER_NAME AS finishUserName
          , ALLOC_DATE AS allocDate
          , E_DATE AS eDate
          , IIF(CUST_NAME != '', CUST_NAME, CUST_NAME_EXCEPT) AS custName
          , IIF(CUST_NAME != '', BIZ_NAME, BIZ_NAME_EXCEPT) AS bizName
          , S_ADDR AS sAddr
          , E_ADDR AS eAddr
          -- 경유지
          , IIF(STOP_NAME != '', STOP_NAME + '포함 총' + STOP_COUNT + '곳', '') AS wayPoint
          , UNPAID_AMT AS unpaidAmt
          , SELL_CHARGE AS sellCharge
          , SELL_WAYPOINT_CHARGE AS sellWaypointCharge
          , SELL_STAY_CHARGE AS sellStayCharge
          , SELL_HANDWORK_CHARGE AS sellHandworkCharge
          , SELL_ROUND_CHARGE AS sellRoundCharge
          , SELL_OTHERADD_CHARGE AS sellOtheraddCharge
          , GOODS_NAME AS goodsName
          , UNIT_PRICE_TYPE_NAME AS unitPriceTypeName
          , UNIT_CHARGE AS unitPrice
          , SELL_WEIGHT AS sellWeight
          , GOODS_WEIGHT AS goodsWeight
          , CHARGE_TYPE_NAME AS chargeTypeName
          , ALLOC_FEE AS allocFee
          , DEPOSIT_AMT AS depositAmt
          , TRAN_RECEIPT_DATE AS tranReceiptYn
          , TRAN_RECEIPT_USER_NAME AS tranReceiptUserName
          , SELL_TAXINV_DATE AS sellTaxinvYn
          , SELL_TAXINV_USER_NAME AS sellTaxinvUserName
          , POSTSEND_DATE AS postsendYn
          , POSTSEND_USER_NAME AS postsendUserName
          , FINISH_MEMO AS finishMemo
          , REF_CONTENT1 AS refContent1
          , REF_CONTENT2 AS refContent2
          , ALLOC_DEPT_NAME AS mngDeptName
          , ALLOC_USER_NAME AS mngUserName
          , DELETE_DATE AS deleteYn
          , DELETE_USER_NAME AS deleteUserName
          
          -- 숨김항목
          , MNG_CUST_ID AS mngCustId
          , MNG_DEPT_ID AS mngDeptId
          , SELL_ALLOC_ID AS sellAllocId
          -- 거래처
          , CUST_ID AS custId
          , DEPT_ID AS deptId
          -- 거래처 예외
          , IIF(CUST_ID != '', CUST_ID, CUST_ID_EXCEPT) AS bizId
          , SELL_CHARGE_ID AS sellChargeId
          , SELL_WAYPOINT_CHARGE_ID AS sellWaypointChargeId
          , SELL_STAY_CHARGE_ID AS sellStayChargeId
          , SELL_HANDWORK_CHARGE_ID AS sellHandworkChargeId
          , SELL_ROUND_CHARGE_ID AS sellRoundChargeId
          , SELL_OTHERADD_CHARGE_ID AS sellOtheraddChargeId
          , CHARGE_TYPE AS chargeTypeCode
          , CAR_NUM AS carNum
          , VEHIC_ID AS vehicId
          , DRIVER_ID AS driverId
          , ALLOC_DATE_FULL AS allocDateFull
          , S_DATE_FULL AS sDateFull
          , E_DATE_FULL AS eDateFull
    	FROM (
          SELECT
        	TC2.ORDER_ID
        	, IIF(TC2.SELL_CALC_DATE != '', TC2.SELL_CALC_DATE, 'N') AS FINISH_YN
        	, (SELECT USER_NAME FROM T_USER WHERE USER_ID = TC2.FINISH_USER_ID) AS FINISH_USER_NAME
        	, ISNULL(REPLACE(CONVERT(CHAR(5), TOA.ALLOC_DATE, 10), '-' ,'.'), '') AS ALLOC_DATE
        	, ISNULL(REPLACE(CONVERT(CHAR(5), TO2.E_DATE, 10), '-' ,'.'), '') AS E_DATE
            , TOA.ALLOC_DATE AS ALLOC_DATE_FULL
            , TO2.S_DATE AS S_DATE_FULL
            , TO2.E_DATE AS E_DATE_FULL
        	-- 거래처
        	, ISNULL((SELECT CUST_NAME FROM T_CUST_DTL WHERE CUST_ID = TO2.REQ_CUST_ID AND DEPT_ID = TO2.REQ_DEPT_ID AND MNG_CUST_ID = TC2.MNG_CUST_ID AND MNG_DEPT_ID = TC2.MNG_DEPT_ID), '') AS CUST_NAME
        	-- 거래처 예외
        	, ISNULL((SELECT CUST_NAME FROM T_CUST_DTL WHERE CUST_ID = TO2.CUST_ID AND DEPT_ID = TO2.DEPT_ID AND MNG_CUST_ID = TC2.MNG_CUST_ID AND MNG_DEPT_ID = TC2.MNG_DEPT_ID), '') AS CUST_NAME_EXCEPT
        	-- 거래처(계산서발행지)
        	, ISNULL((SELECT BIZ_NAME FROM T_CUST_MST WHERE CUST_ID = TO2.REQ_CUST_ID), '') AS BIZ_NAME 
        	-- 거래처(계산서발행지) 예외
        	, ISNULL((SELECT BIZ_NAME FROM T_CUST_MST WHERE CUST_ID = TO2.CUST_ID), '') AS BIZ_NAME_EXCEPT
        	, (TO2.S_SIDO + ' ' + TO2.S_GUNGU) AS S_ADDR
        	, (TO2.E_SIDO + ' ' + TO2.E_GUNGU) AS E_ADDR
        	, ISNULL((SELECT TOP 1 SUBSTRING(E_ADDR, 1, CHARINDEX(' ', E_ADDR, CHARINDEX(' ', E_ADDR) + 1)) FROM T_ORDER_STOP WHERE ORDER_ID = TC2.ORDER_ID AND USE_YN = 'Y'), '') AS STOP_NAME 
        	, CAST((SELECT COUNT(*) FROM T_ORDER_STOP WHERE ORDER_ID = TC2.ORDER_ID AND USE_YN = 'Y') AS VARCHAR) AS STOP_COUNT 
        	-- 매출
        	, (TC2.SELL_CHARGE + TC2.SELL_WAYPOINT_CHARGE + TC2.SELL_STAY_CHARGE + TC2.SELL_HANDWORK_CHARGE + TC2.SELL_ROUND_CHARGE + TC2.SELL_OTHERADD_CHARGE) AS UNPAID_AMT
        	, TC2.SELL_CHARGE
        	, TC2.SELL_WAYPOINT_CHARGE
        	, TC2.SELL_STAY_CHARGE
        	, TC2.SELL_HANDWORK_CHARGE
        	, TC2.SELL_ROUND_CHARGE
        	, TC2.SELL_OTHERADD_CHARGE
        	-- 입금액
            , (TC2.SELL_CHARGE_DEPOSIT + TC2.SELL_WAYPOINT_CHARGE_DEPOSIT + TC2.SELL_STAY_CHARGE_DEPOSIT + TC2.SELL_HANDWORK_CHARGE_DEPOSIT + TC2.SELL_ROUND_CHARGE_DEPOSIT + TC2.SELL_OTHERADD_CHARGE_DEPOSIT) AS DEPOSIT_AMT
        	, TO2.GOODS_NAME
        	, ISNULL((SELECT CNAME FROM T_CODE WHERE GCODE = 'UNIT_PRICE_TYPE' AND CODE = TO2.UNIT_PRICE_TYPE), '') AS UNIT_PRICE_TYPE_NAME
        	, ISNULL(TO2.UNIT_CHARGE, 0) AS UNIT_CHARGE
        	, ISNULL((SELECT SELL_WEIGHT FROM T_ORDER_ALLOC WHERE ORDER_ID = TC2.ORDER_ID AND BUY_CUST_ID = TC2.MNG_CUST_ID AND BUY_DEPT_ID = TC2.MNG_DEPT_ID), '') AS SELL_WEIGHT
        	, CONVERT(FLOAT, ISNULL(TO2.GOODS_WEIGHT, 0)) / 1000 AS GOODS_WEIGHT
        	, ISNULL((SELECT CNAME FROM T_CODE WHERE GCODE = 'CHARGE_TYPE_CD' AND CODE = TO2.CHARGE_TYPE), '') AS CHARGE_TYPE_NAME
        	, ISNULL((SELECT ALLOC_FEE FROM T_ORDER_ALLOC WHERE ORDER_ID = TC2.ORDER_ID AND BUY_CUST_ID = TC2.MNG_CUST_ID AND BUY_DEPT_ID = TC2.MNG_DEPT_ID), 0) AS ALLOC_FEE
        	-- 거래명세서, 세금계산서, 우편발송
        	, ISNULL((SELECT MAX(REPLACE(CONVERT(CHAR(5), TTR.REGDATE, 10), '-' ,'.')) FROM T_TRAN_RECEIPT TTR , T_TRAN_RECEIPT_DTL TTRD WHERE TC2.ORDER_ID = TTRD.ORDER_ID AND TC2.SELL_ALLOC_ID = TTRD.ALLOC_ID AND TTR.RECEIPT_ID = TTRD.RECEIPT_ID AND TTR.USE_YN = 'Y'), 'N') AS TRAN_RECEIPT_DATE
        	, ISNULL((SELECT MAX(TU.USER_NAME) FROM T_TRAN_RECEIPT TTR , T_TRAN_RECEIPT_DTL TTRD , T_USER TU WHERE TC2.ORDER_ID = TTRD.ORDER_ID AND TC2.SELL_ALLOC_ID = TTRD.ALLOC_ID AND TTR.RECEIPT_ID = TTRD.RECEIPT_ID AND TTR.USE_YN = 'Y' AND TTR.REGID = TU.USER_ID), '') AS TRAN_RECEIPT_USER_NAME
        	, ISNULL((SELECT MAX(REPLACE(CONVERT(CHAR(5), TTI.REGDATE, 10), '-' ,'.')) FROM T_TAX_INVOICE TTI , T_TRAN_RECEIPT_DTL TTRD WHERE TC2.ORDER_ID = TTRD.ORDER_ID AND TC2.SELL_ALLOC_ID = TTRD.ALLOC_ID AND TTI.RECEIPT_ID = TTRD.RECEIPT_ID AND TTI.USE_YN = 'Y'), 'N') AS SELL_TAXINV_DATE
        	, ISNULL((SELECT MAX(TU.USER_NAME) FROM T_TAX_INVOICE TTI , T_TRAN_RECEIPT_DTL TTRD , T_USER TU WHERE TC2.ORDER_ID = TTRD.ORDER_ID AND TC2.SELL_ALLOC_ID = TTRD.ALLOC_ID AND TTI.RECEIPT_ID = TTRD.RECEIPT_ID AND TTI.USE_YN = 'Y' AND TTI.REG_ID = TU.USER_ID), '') AS SELL_TAXINV_USER_NAME
        	, IIF(TC2.POSTSEND_DATE != '', TC2.POSTSEND_DATE, 'N') AS POSTSEND_DATE
        	, ISNULL((SELECT USER_NAME FROM T_USER WHERE USER_ID = TC2.POSTSEND_USER_ID), '') AS POSTSEND_USER_NAME
        	, TC2.FINISH_MEMO
        	, TC2.REF_CONTENT1
        	, TC2.REF_CONTENT2
        	, ISNULL((SELECT MAX(DEPT_NAME) FROM T_CUST_DEPT WHERE TOA.SELL_CUST_ID = CUST_ID AND TOA.SELL_DEPT_ID = DEPT_ID), '') AS ALLOC_DEPT_NAME
        	, ISNULL((SELECT MAX(USER_NAME) FROM T_USER WHERE TOA.REGID = USER_ID), '') AS ALLOC_USER_NAME
            , IIF(TC2.DELETE_DATE != '', TC2.DELETE_DATE, 'N') AS DELETE_DATE
        	, ISNULL((SELECT MAX(USER_NAME) FROM T_USER WHERE TC2.DELETE_USER_ID = USER_ID), '') AS DELETE_USER_NAME
          
        	-- 숨김항목
        	, TC2.MNG_CUST_ID
        	, TC2.MNG_DEPT_ID
        	, TC2.SELL_ALLOC_ID
        	-- 거래처
        	, TO2.REQ_CUST_ID AS CUST_ID
        	-- 거래처 예외
        	, TO2.CUST_ID AS CUST_ID_EXCEPT
            , TC2.DEPT_ID AS DEPT_ID
        	, TC2.SELL_CHARGE_ID
        	, TC2.SELL_WAYPOINT_CHARGE_ID
        	, TC2.SELL_STAY_CHARGE_ID
        	, TC2.SELL_HANDWORK_CHARGE_ID
        	, TC2.SELL_ROUND_CHARGE_ID
        	, TC2.SELL_OTHERADD_CHARGE_ID
            -- 청구구분
            , TO2.CHARGE_TYPE
            -- 기사정보
            , ISNULL(TOA.CAR_NUM, '') AS CAR_NUM
            , ISNULL(TOA.VEHIC_ID, '') AS VEHIC_ID
            , ISNULL(TOA.DRIVER_ID, '') AS DRIVER_ID
  		  FROM (
            SELECT
              T_CALC.ORDER_ID
              , MAX(T_CALC.MNG_CUST_ID) AS MNG_CUST_ID
              , MAX(T_CALC.MNG_DEPT_ID) AS MNG_DEPT_ID
              , MAX(T_CALC.CUST_ID) AS CUST_ID
              , MAX(T_CALC.DEPT_ID) AS DEPT_ID
              , MAX(T_CALC.SELL_ALLOC_ID) AS SELL_ALLOC_ID
              , MAX(T_CALC.FINISH_YN) AS FINISH_YN
              , MAX(T_CALC.FINISH_USER_ID) AS FINISH_USER_ID
              , MAX(T_CALC.SELL_CALC_DATE) AS SELL_CALC_DATE
              , MAX(T_CALC.SELL_CHARGE_ID) AS SELL_CHARGE_ID
              , SUM(T_CALC.SELL_CHARGE) AS SELL_CHARGE
              , MAX(T_CALC.SELL_WAYPOINT_CHARGE_ID) AS SELL_WAYPOINT_CHARGE_ID
              , SUM(T_CALC.SELL_WAYPOINT_CHARGE) AS SELL_WAYPOINT_CHARGE
              , MAX(T_CALC.SELL_STAY_CHARGE_ID) AS SELL_STAY_CHARGE_ID
              , SUM(T_CALC.SELL_STAY_CHARGE) AS SELL_STAY_CHARGE
              , MAX(T_CALC.SELL_HANDWORK_CHARGE_ID) AS SELL_HANDWORK_CHARGE_ID
              , SUM(T_CALC.SELL_HANDWORK_CHARGE) AS SELL_HANDWORK_CHARGE
              , MAX(T_CALC.SELL_ROUND_CHARGE_ID) AS SELL_ROUND_CHARGE_ID
              , SUM(T_CALC.SELL_ROUND_CHARGE) AS SELL_ROUND_CHARGE
              , MAX(T_CALC.SELL_OTHERADD_CHARGE_ID) AS SELL_OTHERADD_CHARGE_ID
              , SUM(T_CALC.SELL_OTHERADD_CHARGE) AS SELL_OTHERADD_CHARGE
              , SUM(T_CALC.SELL_CHARGE_DEPOSIT) AS SELL_CHARGE_DEPOSIT
              , SUM(T_CALC.SELL_WAYPOINT_CHARGE_DEPOSIT) AS SELL_WAYPOINT_CHARGE_DEPOSIT
              , SUM(T_CALC.SELL_STAY_CHARGE_DEPOSIT) AS SELL_STAY_CHARGE_DEPOSIT
              , SUM(T_CALC.SELL_HANDWORK_CHARGE_DEPOSIT) AS SELL_HANDWORK_CHARGE_DEPOSIT
              , SUM(T_CALC.SELL_ROUND_CHARGE_DEPOSIT) AS SELL_ROUND_CHARGE_DEPOSIT
              , SUM(T_CALC.SELL_OTHERADD_CHARGE_DEPOSIT) AS SELL_OTHERADD_CHARGE_DEPOSIT
              , MAX(T_CALC.FINISH_MEMO) AS FINISH_MEMO
              , MAX(T_CALC.REF_CONTENT1) AS REF_CONTENT1
              , MAX(T_CALC.REF_CONTENT2) AS REF_CONTENT2
              , MAX(T_CALC.DELETE_DATE) AS DELETE_DATE
              , MAX(T_CALC.DELETE_USER_ID) AS DELETE_USER_ID
              , MAX(T_CALC.POSTSEND_DATE) AS POSTSEND_DATE
              , MAX(T_CALC.POSTSEND_USER_ID) AS POSTSEND_USER_ID
            FROM (
              SELECT
                TC1.ORDER_ID
                , TC1.MNG_CUST_ID
                , TC1.MNG_DEPT_ID
                , ISNULL(TC1.CUST_ID, '') AS CUST_ID
                , ISNULL(TC1.DEPT_ID, '') AS DEPT_ID
                -- 매출
                , TC1.ALLOC_ID AS SELL_ALLOC_ID
                , ISNULL(TC1.FINISH_YN, 'N') AS FINISH_YN
                , ISNULL(TC1.FINISH_USER_ID, '') AS FINISH_USER_ID
                , ISNULL(REPLACE(CONVERT(NVARCHAR(5), TC1.CALC_DATE, 10), '-', '.'), '') AS SELL_CALC_DATE 
                -- 내수운송료(매출)
                , IIF(TC1.CALC_TYPE_CODE = '0002', TC1.CALC_ID, '') AS SELL_CHARGE_ID
                , IIF(TC1.CALC_TYPE_CODE = '0002', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_CHARGE
                -- 경유비(매출)
                , IIF(TC1.CALC_TYPE_CODE = '0023', TC1.CALC_ID, '') AS SELL_WAYPOINT_CHARGE_ID
                , IIF(TC1.CALC_TYPE_CODE = '0023', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_WAYPOINT_CHARGE
                -- 대기료(매출)
                , IIF(TC1.CALC_TYPE_CODE = '0025', TC1.CALC_ID, '') AS SELL_STAY_CHARGE_ID
                , IIF(TC1.CALC_TYPE_CODE = '0025', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_STAY_CHARGE
                -- 수작업비(매출)
                , IIF(TC1.CALC_TYPE_CODE = '0371', TC1.CALC_ID, '') AS SELL_HANDWORK_CHARGE_ID
                , IIF(TC1.CALC_TYPE_CODE = '0371', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_HANDWORK_CHARGE
                -- 회차료(매출)
                , IIF(TC1.CALC_TYPE_CODE = '0372', TC1.CALC_ID, '') AS SELL_ROUND_CHARGE_ID
                , IIF(TC1.CALC_TYPE_CODE = '0372', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_ROUND_CHARGE
                -- 기타추가비(매출)
                , IIF(TC1.CALC_TYPE_CODE = '0294', TC1.CALC_ID, '') AS SELL_OTHERADD_CHARGE_ID
                , IIF(TC1.CALC_TYPE_CODE = '0294', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_OTHERADD_CHARGE
                -- 입금금액
                , IIF(TC1.CALC_TYPE_CODE = '0002', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_CHARGE_DEPOSIT
                , IIF(TC1.CALC_TYPE_CODE = '0023', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_WAYPOINT_CHARGE_DEPOSIT
                , IIF(TC1.CALC_TYPE_CODE = '0025', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_STAY_CHARGE_DEPOSIT
                , IIF(TC1.CALC_TYPE_CODE = '0371', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_HANDWORK_CHARGE_DEPOSIT
                , IIF(TC1.CALC_TYPE_CODE = '0372', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_ROUND_CHARGE_DEPOSIT
                , IIF(TC1.CALC_TYPE_CODE = '0294', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_OTHERADD_CHARGE_DEPOSIT
                , ISNULL(TC1.FINISH_MEMO, '') AS FINISH_MEMO
                , ISNULL(TC1.REF_CONTENT1, '') AS REF_CONTENT1
                , ISNULL(TC1.REF_CONTENT2, '') AS REF_CONTENT2
                -- 삭제
                , ISNULL(REPLACE(CONVERT(NVARCHAR(5), TC1.DELETE_DATE, 10), '-', '.'), '') AS DELETE_DATE
                , ISNULL(TC1.DELETE_USER_ID, '') AS DELETE_USER_ID
                -- 우편발송
                , ISNULL(REPLACE(CONVERT(NVARCHAR(5), TC1.POSTSEND_DATE, 10), '-', '.'), '') AS POSTSEND_DATE
                , ISNULL(TC1.POSTSEND_USER_ID, '') AS POSTSEND_USER_ID
              FROM T_CALC TC1, T_ORDER TO1
              WHERE 1=1
              AND TC1.ORDER_ID = TO1.ORDER_ID 
              AND TC1.SELL_BUY_SCTN = '01' 
              AND TC1.USE_YN = 'Y'
              AND TO1.ORDER_STATE IN ('00','01','04','05','12')
              AND TC1.MNG_CUST_ID = #{loginCustId}
              -- 담당부서검색
              <if test = 'deptId != null and deptId != ""'>
                AND TC1.MNG_DEPT_ID = #{deptId}
              </if>
              -- 배차일자검색 -> 미처리이월건 포함 검색 시 배차일자검색 제외
              <if test = 'carryOver != "Y"'>
                AND TO1.ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
              </if>
              -- 거래처(화주)검색
              <if test = 'custId != null and custId != ""'>
                AND TO1.REQ_CUST_ID = #{custId}
              </if>
              <if test = 'custDeptId != null and custDeptId != ""'>
                AND TO1.REQ_DEPT_ID = #{custDeptId}
              </if>
              -- 오더ID검색
              <if test = 'orderId != null and orderId != ""'>
                AND TO1.ORDER_ID = #{orderId}
              </if>
              -- 청구구분검색
              <if test = 'chargeType != null and chargeType != ""'>
                AND TO1.CHARGE_TYPE = #{chargeType}
              </if>
              -- 정산마감여부
              <if test = 'finishYn == "Y" and carryOver != "Y"'>
                AND TC1.FINISH_YN = 'Y'
              </if>
              <if test = 'finishYn == "N"'>
                AND TC1.FINISH_YN = 'N'
              </if>
              -- 우편발송여부
              <if test = 'postYn != null and postYn != ""'>
                <choose>
                  <when test = 'postYn == "Y"'>
                    AND TC1.POSTSEND_DATE IS NOT NULL 
                  </when>
                  <otherwise>
                    AND TC1.POSTSEND_DATE IS NULL
                  </otherwise>
                </choose>
              </if>
              -- 삭제건 조회 여부
              <if test = 'deleteYn != null and deleteYn != ""'>
                <choose>
                  <when test = 'deleteYn == "Y"'>
                    AND TC1.DELETE_DATE IS NOT NULL
                  </when>
                  <otherwise>
                    AND TC1.DELETE_DATE IS NULL
                  </otherwise>
                </choose>
              </if>
            ) AS T_CALC
            WHERE 1=1
            GROUP BY T_CALC.ORDER_ID
          ) TC2
          LEFT OUTER JOIN T_ORDER TO2 ON TC2.ORDER_ID = TO2.ORDER_ID
          LEFT OUTER JOIN T_ORDER_ALLOC TOA ON TC2.ORDER_ID = TOA.ORDER_ID AND TC2.MNG_CUST_ID = TOA.SELL_CUST_ID AND TC2.MNG_DEPT_ID = TOA.SELL_DEPT_ID
          LEFT OUTER JOIN T_CUST_MST TCM ON TC2.CUST_ID = TCM.CUST_ID
          WHERE 1=1
          -- 배차담당자검색
          <if test = 'userId != null and userId != ""'>
            AND TOA.REGID = #{userId}
          </if>
          -- 사업자명 검색
          <if test = 'bizName != null and bizName != ""'>
            AND TCM.CUST_ID = #{bizName}
          </if>
          -- 사업자번호 검색
<!--           <if test = 'searchBizType == "bizNum" and bizNum != null and bizNum != ""'> -->
<!--             AND TCM.BIZ_NUM = #{bizNum} -->
<!--           </if> -->
    	) A
        WHERE 1=1
    ) T_SELL_CALC
    WHERE 1=1
    AND number BETWEEN #{start} AND #{end}
    ORDER BY number ASC
  </select>
  
  <!-- 검색조건에 따른 전체 카운트 및 매출 요약 정보 -->
  <select id="selectSellCalcListCnt" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT
      COUNT(1) AS sellCalcListCnt
      , ISNULL(SUM(UNPAID_AMT), 0) sumUnpaidAmt
      , ISNULL(SUM(DEPOSIT_AMT), 0) sumDepositAmt
      FROM (
        SELECT
          TC2.ORDER_ID
          , IIF(TC2.SELL_CALC_DATE != '', TC2.SELL_CALC_DATE, 'N') AS FINISH_YN
          , (SELECT USER_NAME FROM T_USER WHERE USER_ID = TC2.FINISH_USER_ID) AS FINISH_USER_NAME
          , ISNULL(REPLACE(CONVERT(CHAR(5), TOA.ALLOC_DATE, 10), '-' ,'.'), '') AS ALLOC_DATE
          , ISNULL(REPLACE(CONVERT(CHAR(5), TO2.E_DATE, 10), '-' ,'.'), '') AS E_DATE
          -- 거래처
          , ISNULL((SELECT CUST_NAME FROM T_CUST_DTL WHERE CUST_ID = TO2.REQ_CUST_ID AND DEPT_ID = TO2.REQ_DEPT_ID AND MNG_CUST_ID = TC2.MNG_CUST_ID AND MNG_DEPT_ID = TC2.MNG_DEPT_ID), '') AS CUST_NAME
          -- 거래처 예외
          , ISNULL((SELECT CUST_NAME FROM T_CUST_DTL WHERE CUST_ID = TO2.CUST_ID AND DEPT_ID = TO2.DEPT_ID AND MNG_CUST_ID = TC2.MNG_CUST_ID AND MNG_DEPT_ID = TC2.MNG_DEPT_ID), '') AS CUST_NAME_EXCEPT
          -- 거래처(계산서발행지)
          , ISNULL((SELECT BIZ_NAME FROM T_CUST_MST WHERE CUST_ID = TO2.REQ_CUST_ID), '') AS BIZ_NAME 
          -- 거래처(계산서발행지) 예외
          , ISNULL((SELECT BIZ_NAME FROM T_CUST_MST WHERE CUST_ID = TO2.CUST_ID), '') AS BIZ_NAME_EXCEPT
          , (TO2.S_SIDO + ' ' + TO2.S_GUNGU) AS S_ADDR
          , (TO2.E_SIDO + ' ' + TO2.E_GUNGU) AS E_ADDR
          , ISNULL((SELECT TOP 1 SUBSTRING(E_ADDR, 1, CHARINDEX(' ', E_ADDR, CHARINDEX(' ', E_ADDR) + 1)) FROM T_ORDER_STOP WHERE ORDER_ID = TC2.ORDER_ID AND USE_YN = 'Y'), '') AS STOP_NAME 
          , CAST((SELECT COUNT(*) FROM T_ORDER_STOP WHERE ORDER_ID = TC2.ORDER_ID AND USE_YN = 'Y') AS VARCHAR) AS STOP_COUNT 
          -- 매출
          , (TC2.SELL_CHARGE + TC2.SELL_WAYPOINT_CHARGE + TC2.SELL_STAY_CHARGE + TC2.SELL_HANDWORK_CHARGE + TC2.SELL_ROUND_CHARGE + TC2.SELL_OTHERADD_CHARGE) AS UNPAID_AMT
          , TC2.SELL_CHARGE
          , TC2.SELL_WAYPOINT_CHARGE
          , TC2.SELL_STAY_CHARGE
          , TC2.SELL_HANDWORK_CHARGE
          , TC2.SELL_ROUND_CHARGE
          , TC2.SELL_OTHERADD_CHARGE
          -- 입금액
          , (TC2.SELL_CHARGE_DEPOSIT + TC2.SELL_WAYPOINT_CHARGE_DEPOSIT + TC2.SELL_STAY_CHARGE_DEPOSIT + TC2.SELL_HANDWORK_CHARGE_DEPOSIT + TC2.SELL_ROUND_CHARGE_DEPOSIT + TC2.SELL_OTHERADD_CHARGE_DEPOSIT) AS DEPOSIT_AMT
          , TO2.GOODS_NAME
          , ISNULL((SELECT CNAME FROM T_CODE WHERE GCODE = 'UNIT_PRICE_TYPE' AND CODE = TO2.UNIT_PRICE_TYPE), '') AS UNIT_PRICE_TYPE_NAME
          , ISNULL(TO2.UNIT_CHARGE, 0) AS UNIT_CHARGE
          , ISNULL((SELECT SELL_WEIGHT FROM T_ORDER_ALLOC WHERE ORDER_ID = TC2.ORDER_ID AND BUY_CUST_ID = TC2.MNG_CUST_ID AND BUY_DEPT_ID = TC2.MNG_DEPT_ID), '') AS SELL_WEIGHT
          , CONVERT(FLOAT, ISNULL(TO2.GOODS_WEIGHT, 0)) / 1000 AS GOODS_WEIGHT
          , ISNULL((SELECT CNAME FROM T_CODE WHERE GCODE = 'CHARGE_TYPE_CD' AND CODE = TO2.CHARGE_TYPE), '') AS CHARGE_TYPE_NAME
          , ISNULL((SELECT ALLOC_FEE FROM T_ORDER_ALLOC WHERE ORDER_ID = TC2.ORDER_ID AND BUY_CUST_ID = TC2.MNG_CUST_ID AND BUY_DEPT_ID = TC2.MNG_DEPT_ID), 0) AS ALLOC_FEE
          -- 거래명세서, 세금계산서, 우편발송
          , ISNULL((SELECT MAX(REPLACE(CONVERT(CHAR(5), TTR.REGDATE, 10), '-' ,'.')) FROM T_TRAN_RECEIPT TTR , T_TRAN_RECEIPT_DTL TTRD WHERE TC2.ORDER_ID = TTRD.ORDER_ID AND TC2.SELL_ALLOC_ID = TTRD.ALLOC_ID AND TTR.RECEIPT_ID = TTRD.RECEIPT_ID AND TTR.USE_YN = 'Y'), 'N') AS TRAN_RECEIPT_DATE
          , ISNULL((SELECT MAX(TU.USER_NAME) FROM T_TRAN_RECEIPT TTR , T_TRAN_RECEIPT_DTL TTRD , T_USER TU WHERE TC2.ORDER_ID = TTRD.ORDER_ID AND TC2.SELL_ALLOC_ID = TTRD.ALLOC_ID AND TTR.RECEIPT_ID = TTRD.RECEIPT_ID AND TTR.USE_YN = 'Y' AND TTR.REGID = TU.USER_ID), '') AS TRAN_RECEIPT_USER_NAME
          , ISNULL((SELECT MAX(REPLACE(CONVERT(CHAR(5), TTI.REGDATE, 10), '-' ,'.')) FROM T_TAX_INVOICE TTI , T_TRAN_RECEIPT_DTL TTRD WHERE TC2.ORDER_ID = TTRD.ORDER_ID AND TC2.SELL_ALLOC_ID = TTRD.ALLOC_ID AND TTI.RECEIPT_ID = TTRD.RECEIPT_ID AND TTI.USE_YN = 'Y'), 'N') AS SELL_TAXINV_DATE
          , ISNULL((SELECT MAX(TU.USER_NAME) FROM T_TAX_INVOICE TTI , T_TRAN_RECEIPT_DTL TTRD , T_USER TU WHERE TC2.ORDER_ID = TTRD.ORDER_ID AND TC2.SELL_ALLOC_ID = TTRD.ALLOC_ID AND TTI.RECEIPT_ID = TTRD.RECEIPT_ID AND TTI.USE_YN = 'Y' AND TTI.REG_ID = TU.USER_ID), '') AS SELL_TAXINV_USER_NAME
          , IIF(TC2.POSTSEND_DATE != '', TC2.POSTSEND_DATE, 'N') AS POSTSEND_DATE
          , ISNULL((SELECT USER_NAME FROM T_USER WHERE USER_ID = TC2.POSTSEND_USER_ID), '') AS POSTSEND_USER_NAME
          , TC2.FINISH_MEMO
          , TC2.REF_CONTENT1
          , TC2.REF_CONTENT2
          , ISNULL((SELECT MAX(DEPT_NAME) FROM T_CUST_DEPT WHERE TOA.SELL_CUST_ID = CUST_ID AND TOA.SELL_DEPT_ID = DEPT_ID), '') AS ALLOC_DEPT_NAME
          , ISNULL((SELECT MAX(USER_NAME) FROM T_USER WHERE TOA.REGID = USER_ID), '') AS ALLOC_USER_NAME
          , IIF(TC2.DELETE_DATE != '', TC2.DELETE_DATE, 'N') AS DELETE_DATE
          , ISNULL((SELECT MAX(USER_NAME) FROM T_USER WHERE TC2.DELETE_USER_ID = USER_ID), '') AS DELETE_USER_NAME
          
          -- 숨김항목
          , TC2.MNG_CUST_ID
          , TC2.MNG_DEPT_ID
          , TC2.SELL_ALLOC_ID
          -- 거래처
          , TO2.REQ_CUST_ID AS CUST_ID
          -- 거래처 예외
          , TO2.CUST_ID AS CUST_ID_EXCEPT
          , TC2.SELL_CHARGE_ID
          , TC2.SELL_WAYPOINT_CHARGE_ID
          , TC2.SELL_STAY_CHARGE_ID
          , TC2.SELL_HANDWORK_CHARGE_ID
          , TC2.SELL_ROUND_CHARGE_ID
          , TC2.SELL_OTHERADD_CHARGE_ID
        FROM (
          SELECT
            T_CALC.ORDER_ID
            , MAX(T_CALC.MNG_CUST_ID) AS MNG_CUST_ID
            , MAX(T_CALC.MNG_DEPT_ID) AS MNG_DEPT_ID
            , MAX(T_CALC.CUST_ID) AS CUST_ID
            , MAX(T_CALC.DEPT_ID) AS DEPT_ID
            , MAX(T_CALC.SELL_ALLOC_ID) AS SELL_ALLOC_ID
            , MAX(T_CALC.FINISH_YN) AS FINISH_YN
            , MAX(T_CALC.FINISH_USER_ID) AS FINISH_USER_ID
            , MAX(T_CALC.SELL_CALC_DATE) AS SELL_CALC_DATE
            , MAX(T_CALC.SELL_CHARGE_ID) AS SELL_CHARGE_ID
            , SUM(T_CALC.SELL_CHARGE) AS SELL_CHARGE
            , MAX(T_CALC.SELL_WAYPOINT_CHARGE_ID) AS SELL_WAYPOINT_CHARGE_ID
            , SUM(T_CALC.SELL_WAYPOINT_CHARGE) AS SELL_WAYPOINT_CHARGE
            , MAX(T_CALC.SELL_STAY_CHARGE_ID) AS SELL_STAY_CHARGE_ID
            , SUM(T_CALC.SELL_STAY_CHARGE) AS SELL_STAY_CHARGE
            , MAX(T_CALC.SELL_HANDWORK_CHARGE_ID) AS SELL_HANDWORK_CHARGE_ID
            , SUM(T_CALC.SELL_HANDWORK_CHARGE) AS SELL_HANDWORK_CHARGE
            , MAX(T_CALC.SELL_ROUND_CHARGE_ID) AS SELL_ROUND_CHARGE_ID
            , SUM(T_CALC.SELL_ROUND_CHARGE) AS SELL_ROUND_CHARGE
            , MAX(T_CALC.SELL_OTHERADD_CHARGE_ID) AS SELL_OTHERADD_CHARGE_ID
            , SUM(T_CALC.SELL_OTHERADD_CHARGE) AS SELL_OTHERADD_CHARGE
            , SUM(T_CALC.SELL_CHARGE_DEPOSIT) AS SELL_CHARGE_DEPOSIT
            , SUM(T_CALC.SELL_WAYPOINT_CHARGE_DEPOSIT) AS SELL_WAYPOINT_CHARGE_DEPOSIT
            , SUM(T_CALC.SELL_STAY_CHARGE_DEPOSIT) AS SELL_STAY_CHARGE_DEPOSIT
            , SUM(T_CALC.SELL_HANDWORK_CHARGE_DEPOSIT) AS SELL_HANDWORK_CHARGE_DEPOSIT
            , SUM(T_CALC.SELL_ROUND_CHARGE_DEPOSIT) AS SELL_ROUND_CHARGE_DEPOSIT
            , SUM(T_CALC.SELL_OTHERADD_CHARGE_DEPOSIT) AS SELL_OTHERADD_CHARGE_DEPOSIT
            , MAX(T_CALC.FINISH_MEMO) AS FINISH_MEMO
            , MAX(T_CALC.REF_CONTENT1) AS REF_CONTENT1
            , MAX(T_CALC.REF_CONTENT2) AS REF_CONTENT2
            , MAX(T_CALC.DELETE_DATE) AS DELETE_DATE
            , MAX(T_CALC.DELETE_USER_ID) AS DELETE_USER_ID
            , MAX(T_CALC.POSTSEND_DATE) AS POSTSEND_DATE
            , MAX(T_CALC.POSTSEND_USER_ID) AS POSTSEND_USER_ID
          FROM (
            SELECT
              TC1.ORDER_ID
              , TC1.MNG_CUST_ID
              , TC1.MNG_DEPT_ID
              , ISNULL(TC1.CUST_ID, '') AS CUST_ID
              , ISNULL(TC1.DEPT_ID, '') AS DEPT_ID
              -- 매출
              , TC1.ALLOC_ID AS SELL_ALLOC_ID
              , ISNULL(TC1.FINISH_YN, 'N') AS FINISH_YN
              , ISNULL(TC1.FINISH_USER_ID, '') AS FINISH_USER_ID
              , ISNULL(REPLACE(CONVERT(NVARCHAR(5), TC1.CALC_DATE, 10), '-', '.'), '') AS SELL_CALC_DATE 
              -- 내수운송료(매출)
              , IIF(TC1.CALC_TYPE_CODE = '0002', TC1.CALC_ID, '') AS SELL_CHARGE_ID
              , IIF(TC1.CALC_TYPE_CODE = '0002', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_CHARGE
              -- 경유비(매출)
              , IIF(TC1.CALC_TYPE_CODE = '0023', TC1.CALC_ID, '') AS SELL_WAYPOINT_CHARGE_ID
              , IIF(TC1.CALC_TYPE_CODE = '0023', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_WAYPOINT_CHARGE
              -- 대기료(매출)
              , IIF(TC1.CALC_TYPE_CODE = '0025', TC1.CALC_ID, '') AS SELL_STAY_CHARGE_ID
              , IIF(TC1.CALC_TYPE_CODE = '0025', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_STAY_CHARGE
              -- 수작업비(매출)
              , IIF(TC1.CALC_TYPE_CODE = '0371', TC1.CALC_ID, '') AS SELL_HANDWORK_CHARGE_ID
              , IIF(TC1.CALC_TYPE_CODE = '0371', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_HANDWORK_CHARGE
              -- 회차료(매출)
              , IIF(TC1.CALC_TYPE_CODE = '0372', TC1.CALC_ID, '') AS SELL_ROUND_CHARGE_ID
              , IIF(TC1.CALC_TYPE_CODE = '0372', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_ROUND_CHARGE
              -- 기타추가비(매출)
              , IIF(TC1.CALC_TYPE_CODE = '0294', TC1.CALC_ID, '') AS SELL_OTHERADD_CHARGE_ID
              , IIF(TC1.CALC_TYPE_CODE = '0294', ISNULL(TC1.UNPAID_AMT, 0), 0) AS SELL_OTHERADD_CHARGE
              -- 입금금액
              , IIF(TC1.CALC_TYPE_CODE = '0002', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_CHARGE_DEPOSIT
              , IIF(TC1.CALC_TYPE_CODE = '0023', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_WAYPOINT_CHARGE_DEPOSIT
              , IIF(TC1.CALC_TYPE_CODE = '0025', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_STAY_CHARGE_DEPOSIT
              , IIF(TC1.CALC_TYPE_CODE = '0371', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_HANDWORK_CHARGE_DEPOSIT
              , IIF(TC1.CALC_TYPE_CODE = '0372', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_ROUND_CHARGE_DEPOSIT
              , IIF(TC1.CALC_TYPE_CODE = '0294', ISNULL(TC1.DEPOSIT_AMT, 0), 0) AS SELL_OTHERADD_CHARGE_DEPOSIT
              , ISNULL(TC1.FINISH_MEMO, '') AS FINISH_MEMO
              , ISNULL(TC1.REF_CONTENT1, '') AS REF_CONTENT1
              , ISNULL(TC1.REF_CONTENT2, '') AS REF_CONTENT2
              -- 삭제
              , ISNULL(REPLACE(CONVERT(NVARCHAR(5), TC1.DELETE_DATE, 10), '-', '.'), '') AS DELETE_DATE
              , ISNULL(TC1.DELETE_USER_ID, '') AS DELETE_USER_ID
              -- 우편발송
              , ISNULL(REPLACE(CONVERT(NVARCHAR(5), TC1.POSTSEND_DATE, 10), '-', '.'), '') AS POSTSEND_DATE
              , ISNULL(TC1.POSTSEND_USER_ID, '') AS POSTSEND_USER_ID
            FROM T_CALC TC1, T_ORDER TO1
            WHERE 1=1
            AND TC1.ORDER_ID = TO1.ORDER_ID 
            AND TC1.SELL_BUY_SCTN = '01' 
            AND TC1.USE_YN = 'Y'
            AND TO1.ORDER_STATE IN ('00','01','04','05','12')
            AND TC1.MNG_CUST_ID = #{loginCustId}
            -- 담당부서검색
            <if test = 'deptId != null and deptId != ""'>
              AND TC1.MNG_DEPT_ID = #{deptId}
            </if>
            -- 배차일자검색 -> 미처리이월건 포함 검색 시 배차일자검색 제외
            <if test = 'carryOver != "Y"'>
              AND TO1.ALLOC_DATE BETWEEN #{fromDate} AND #{toDate} + ' 23:59:59'
            </if>
            -- 거래처(화주)검색
            <if test = 'custId != null and custId != ""'>
              AND TO1.REQ_CUST_ID = #{custId}
            </if>
            <if test = 'custDeptId != null and custDeptId != ""'>
              AND TO1.REQ_DEPT_ID = #{custDeptId}
            </if>
            -- 오더ID검색
            <if test = 'orderId != null and orderId != ""'>
              AND TO1.ORDER_ID = #{orderId}
            </if>
            -- 청구구분검색
            <if test = 'chargeType != null and chargeType != ""'>
              AND TO1.CHARGE_TYPE = #{chargeType}
            </if>
            -- 정산마감여부
            <if test = 'finishYn == "Y" and carryOver != "Y"'>
              AND TC1.FINISH_YN = 'Y'
            </if>
            <if test = 'finishYn == "N"'>
              AND TC1.FINISH_YN = 'N'
            </if>
            -- 우편발송여부
            <if test = 'postYn != null and postYn != ""'>
              <choose>
                <when test = 'postYn == "Y"'>
                  AND TC1.POSTSEND_DATE IS NOT NULL 
                </when>
                <otherwise>
                  AND TC1.POSTSEND_DATE IS NULL
                </otherwise>
              </choose>
            </if>
            -- 삭제건 조회 여부
            <if test = 'deleteYn != null and deleteYn != ""'>
              <choose>
                <when test = 'deleteYn == "Y"'>
                  AND TC1.DELETE_DATE IS NOT NULL
                </when>
                <otherwise>
                  AND TC1.DELETE_DATE IS NULL
                </otherwise>
              </choose>
            </if>
          ) AS T_CALC
          WHERE 1=1
          GROUP BY T_CALC.ORDER_ID
        ) TC2
        LEFT OUTER JOIN T_ORDER TO2 ON TC2.ORDER_ID = TO2.ORDER_ID
        LEFT OUTER JOIN T_ORDER_ALLOC TOA ON TC2.ORDER_ID = TOA.ORDER_ID AND TC2.MNG_CUST_ID = TOA.SELL_CUST_ID AND TC2.MNG_DEPT_ID = TOA.SELL_DEPT_ID
        LEFT OUTER JOIN T_CUST_MST TCM ON TC2.CUST_ID = TCM.CUST_ID
        WHERE 1=1
        -- 배차담당자검색
        <if test = 'userId != null and userId != ""'>
          AND TOA.REGID = #{userId}
        </if>
        -- 사업자명 검색
        <if test = 'bizName != null and bizName != ""'>
          AND TCM.CUST_ID = #{bizName}
        </if>
        -- 사업자번호 검색
<!--         <if test = 'searchBizType == "bizNum" and bizNum != null and bizNum != ""'> -->
<!--           AND TCM.BIZ_NUM = #{bizNum} -->
<!--         </if> -->
    ) A
  </select>
  
  <select id="selectTaxBizInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT
      -- 공급받는자
      TCD.CUST_ID AS buyerCustId
      , TCD.DEPT_ID AS buyerDeptId
      , ISNULL(TCD.TAX_EMAIL, '') AS buyerMemEmail
      , ISNULL(TCD.TAX_STAFF_NAME, '') AS buyerMemName
      , ISNULL(TCD.TAX_TELNUM, '') AS buyerMemTel
      , ISNULL(TCD.POSTAL_ADDR, '') AS buyerPostalAddr
      , ISNULL(TCD.POSTAL_ADDR_DETAIL, '') AS buyerPostalAddrDetail
      , ISNULL(TCD.POSTAL_POST, '') AS buyerPostalPost
      , TCM_BUYER.BIZ_NAME AS buyerBizName
      , TCM_BUYER.BIZ_NUM AS buyerBizNum
      , TCM_BUYER.BIZ_NUM_SUB AS buyerBizNumSub
      , TCM_BUYER.BIZ_TYPE_CODE AS buyerBizTypeCode
      , TCM_BUYER.CEO AS buyerCeo
      , TCM_BUYER.BIZ_COND AS buyerBizCond
      , TCM_BUYER.BIZ_KIND AS buyerBizKind
      , TCM_BUYER.BIZ_POST AS buyerBizPost
      , TCM_BUYER.BIZ_ADDR AS buyerBizAddr
      , TCM_BUYER.BIZ_ADDR_DETAIL AS buyerBizAddrDetail
    
      -- 공급자
      , TCD.MNG_CUST_ID AS supplierCustId
      , TCD.MNG_DEPT_ID AS supplierDeptId
      , TCM_SUPPLIER.BIZ_NAME AS supplierBizName
      , TCM_SUPPLIER.BIZ_NUM AS supplierBizNum
      , TCM_SUPPLIER.BIZ_NUM_SUB AS supplierBizNumSub
      , TCM_SUPPLIER.BIZ_TYPE_CODE AS supplierBizTypeCode
      , TCM_SUPPLIER.CEO AS supplierCeo
      , TCM_SUPPLIER.BIZ_COND AS supplierBizCond
      , TCM_SUPPLIER.BIZ_KIND AS supplierBizKind
      , TCM_SUPPLIER.BIZ_POST AS supplierBizPost
      , TCM_SUPPLIER.BIZ_ADDR AS supplierBizAddr
      , TCM_SUPPLIER.BIZ_ADDR_DETAIL AS supplierBizAddrDetail
      , TCM_SUPPLIER.BANK_CODE AS supplierBankCode
      , TCM_SUPPLIER.BANK_CNNM AS supplierBankCnnm
      , TCM_SUPPLIER.BANK_ACCOUNT AS supplierBankAccount
      , (SELECT CNAME FROM T_CODE WHERE GCODE = 'BANK_CD' AND CODE = TCM_SUPPLIER.BANK_CODE) AS supplierBankName
      , ISNULL(TU.USER_NAME, '') AS supplierMemName
      , ISNULL(TU.EMAIL, '') AS supplierMemEmail
      , ISNULL(TU.MOBILE, '') AS supplierMemTel
    FROM T_CUST_DTL TCD
      INNER JOIN T_CUST_MST TCM_SUPPLIER ON TCD.MNG_CUST_ID = TCM_SUPPLIER.CUST_ID
      INNER JOIN T_CUST_MST TCM_BUYER ON TCD.CUST_ID = TCM_BUYER.CUST_ID
      INNER JOIN T_USER TU ON TCD.MANAGER = TU.USER_ID
    WHERE 1=1
      AND TCD.USE_YN = 'Y'
      AND TCD.CUST_ID = #{custId}
      AND TCD.DEPT_ID = #{deptId}
      AND TCD.MNG_CUST_ID = #{mngCustId}
      AND TCD.MNG_DEPT_ID = #{mngDeptId}
  </select>
  
  <!-- 거래명세서, 세금계산서 발행용 공급자 정보 조회 (인수증) -->
<!--   <select id="selectSupplierTaxBizInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap"> -->
<!--     SELECT -->
<!--       TCM.CUST_ID AS supplierCustId -->
<!--       , TCM.BIZ_NAME AS supplierBizName -->
<!--       , TCM.BIZ_NUM AS supplierBizNum -->
<!--       , TCM.CEO AS supplierCeo -->
<!--       , TCM.BIZ_COND AS supplierBizCond -->
<!--       , TCM.BIZ_KIND AS supplierBizKind -->
<!--       , TCM.BIZ_POST AS supplierBizPost -->
<!--       , TCM.BIZ_ADDR AS supplierBizAddr -->
<!--       , TCM.BIZ_ADDR_DETAIL AS supplierBizAddrDetail -->
<!--       , TCM.BANK_CODE AS supplierBankCode -->
<!--       , TCM.BANK_CNNM AS supplierBankCnnm -->
<!--       , TCM.BANK_ACCOUNT AS supplierBankAccount -->
<!--       , (SELECT CNAME FROM T_CODE WHERE GCODE = 'BANK_CD' AND CODE = TCM.BANK_CODE) AS supplierBankName -->
<!--       , ISNULL(TU.USER_NAME, '') AS supplierMemName -->
<!--       , ISNULL(TU.EMAIL, '') AS supplierMemEmail -->
<!--       , ISNULL(TU.MOBILE, '') AS supplierMemTel -->
<!--     FROM T_CUST_MST TCM -->
<!--     INNER JOIN T_CUST_DTL TCD ON TCM.CUST_ID = TCD.CUST_ID AND TCD.DEPT_ID = #{mngDeptId} AND TCD.SELL_BUY_SCTN = '01' AND TCD.USE_YN = 'Y' -->
<!--     INNER JOIN T_USER TU ON TCD.MANAGER = TU.USER_ID -->
<!--     WHERE 1=1 -->
<!--     AND TCM.CUST_ID = #{mngCustId} -->
<!--   </select> -->
  
  <!-- 거래명세서, 세금계산서 발행용 공급받는자 정보 조회 -->
<!--   <select id="selectBuyerTaxBizInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap"> -->
<!--     SELECT -->
<!--       TCM.CUST_ID AS buyerCustId -->
<!--       , TCM.BIZ_NAME AS buyerBizName -->
<!--       , TCM.BIZ_NUM AS buyerBizNum -->
<!--       , TCM.CEO AS buyerCeo -->
<!--       , TCM.BIZ_COND AS buyerBizCond -->
<!--       , TCM.BIZ_KIND AS buyerBizKind -->
<!--       , TCM.BIZ_POST AS buyerBizPost -->
<!--       , TCM.BIZ_ADDR AS buyerBizAddr -->
<!--       , TCM.BIZ_ADDR_DETAIL AS buyerBizAddrDetail -->
<!--       , ISNULL(TCD.TAX_STAFF_NAME, '') AS buyerMemName -->
<!--       , ISNULL(TCD.TAX_EMAIL, '') AS buyerMemEmail -->
<!--       , ISNULL(TCD.TAX_TELNUM, '') AS buyerMemTel -->
<!--     FROM T_CUST_MST TCM -->
<!--     INNER JOIN T_CUST_DTL TCD ON TCM.CUST_ID = TCD.CUST_ID AND TCD.DEPT_ID = #{deptId} AND TCD.MNG_CUST_ID = #{mngCustId} AND TCD.MNG_DEPT_ID = #{mngDeptId} AND TCD.SELL_BUY_SCTN = '01' AND TCD.USE_YN = 'Y' -->
<!--     INNER JOIN T_USER TU ON TCD.MANAGER = TU.USER_ID -->
<!--     WHERE 1=1 -->
<!--     AND TCM.USE_YN = 'Y' -->
<!--     AND TCM.CUST_ID = #{custId} -->
<!--   </select> -->
  
  <!-- 거래명세서, 세금계산서 발행용 공급자 정보 조회 (기사발행) -->
  <select id="selectSupplierTaxDriverInfo" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    SELECT
      TD.DRIVER_ID AS supplierDriverId
      , ISNULL(TVM.VEHIC_ID, '') AS supplierVehicId
      , ISNULL(TD.DRIVER_NAME, '') AS supplierDriverName
      , ISNULL(TD.DRIVER_EMAIL, '') AS supplierDriverEmail
      , ISNULL(TD.MOBILE, '') AS supplierDriverTel
      , ISNULL(TD.BANK_CODE, '') AS supplierDriverBankCode
      , ISNULL(TD.BANK_CNNM, '') AS supplierDriverBankCnnm
      , ISNULL(TD.BANK_ACCOUNT, '') AS supplierDriverBankAccount
      , ISNULL((SELECT CNAME FROM T_CODE WHERE GCODE = 'BANK_CD' AND CODE = TD.BANK_CODE), '') AS supplierDriverBankName
    FROM T_DRIVER TD
      INNER JOIN T_VEHIC_MST TVM ON TD.DRIVER_ID = TVM.DRIVER_ID
    WHERE 1=1
      AND TD.USE_YN = 'Y'
      AND TD.DRIVER_ID = #{driverId}
  </select>
  
  <update id="updatePostSendYn" parameterType="java.util.HashMap">
    UPDATE T_CALC
    <choose>
      <when test = 'postSendYn == "Y"'>
        SET
          POSTSEND_DATE = GETDATE()
          , POSTSEND_USER_ID = #{loginId}
      </when>
      <otherwise>
        SET
          POSTSEND_DATE = null
          , POSTSEND_USER_ID = null
      </otherwise>
    </choose>
    WHERE 1=1
    AND SELL_BUY_SCTN = '01'
    AND ORDER_ID IN
    <foreach collection="orderIdList" item="item" separator="," open="(" close=")">
      #{item}
    </foreach>
    AND ALLOC_ID IN
    <foreach collection="allocIdList" item="item" separator="," open="(" close=")">
      #{item}
    </foreach>
  </update>
  
  <update id="updateDeleteYn" parameterType="java.util.HashMap">
    UPDATE T_CALC
    <choose>
      <when test = 'deleteYn == "Y"'>
        SET
          DELETE_DATE = GETDATE()
          , DELETE_USER_ID = #{loginId}
      </when>
      <otherwise>
        SET
          DELETE_DATE = null
          , DELETE_USER_ID = null
      </otherwise>
    </choose>
    WHERE 1=1
    AND SELL_BUY_SCTN = '01'
    AND ORDER_ID IN
    <foreach collection="orderIdList" item="item" separator="," open="(" close=")">
      #{item}
    </foreach>
    AND ALLOC_ID IN
    <foreach collection="allocIdList" item="item" separator="," open="(" close=")">
      #{item}
    </foreach>
  </update>
  
  <!-- 화주변경 프로시저 -->
  <update id="updateSellChangeReq" statementType="CALLABLE" parameterType="java.util.HashMap">
    { call UPDATE_CHANGE_REQ (
              #{custId}
            , #{deptId}
            , #{manager}
            , #{orderList}
            , #{allocList}
            , #{bizAddr}
            , #{bizAddrDetail}
            , #{mobile}
            , #{memo}
            , #{loginCustId}
            , #{loginDeptId}
            , #{retCode, mode=OUT, jdbcType=NVARCHAR, javaType=String}
            , #{retMsg, mode=OUT, jdbcType=NVARCHAR, javaType=String})
    }
  </update>
  
  <!-- 청구 운송비 변경 프로시저 mode: 'N' (insert) -->
  <insert id="upsertCalcCharge" statementType="CALLABLE" parameterType="java.util.HashMap">
    { call INSERT_CALC_CHARGE_V2 (
              #{calcId}
            , #{calcTypeCode}
            , #{calcCharge}
            , #{memo}
            , #{sellBuySctn}
            , #{orderId}
            , #{allocId}
            , #{mode}
            , #{regId}
            , #{retCode, mode=OUT, jdbcType=NVARCHAR, javaType=String}
            , #{retMsg, mode=OUT, jdbcType=NVARCHAR, javaType=String})
    }
  </insert>
  
  <!-- 내수운송료 변경 프로시저 -> 내수운송료의 경우 T_ORDER_ALLOC 테이블도 업데이트 -->
  <update id="updateAllocCharge" parameterType="java.util.HashMap">
    UPDATE
      T_ORDER_ALLOC
    SET
      ALLOC_CHARGE = #{allocCharge}
    WHERE 1=1
    AND ALLOC_ID = #{allocId}
  </update>
    
  <!-- 매출정산마감 프로시저 -->
  <update id="sellCalcFinish" statementType="CALLABLE" parameterType="java.util.HashMap">
    { call UPDATE_SELL_CALC_FINISH (
              #{mode}
            , #{editId}
            , #{calcIdList}
            , #{retCode, mode=OUT, jdbcType=NVARCHAR, javaType=String}
            , #{retMsg, mode=OUT, jdbcType=NVARCHAR, javaType=String})
    }
  </update>
</mapper>