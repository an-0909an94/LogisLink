<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pushDataNS">	

	<select id="selectPushList" parameterType="java.util.HashMap" resultType="pushVO">
		SELECT *
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY PM.REGDATE DESC) AS number,
				PM.REGDATE AS regDate,
				(CASE WHEN ISNULL(PS.USER_ID ,'') = '' THEN (SELECT MOBILE FROM T_DRIVER D WHERE D.DRIVER_ID = PS.DRIVER_ID) ELSE (SELECT MOBILE FROM T_USER U WHERE U.USER_ID = PS.USER_ID) END ) AS sendMobile,
				CASE WHEN PS.IS_DONE ='Y' THEN '성공' WHEN PS.IS_DONE ='N' THEN '미전송' ELSE '실패' END AS isDone,
				PM.TITLE AS title,
				PM.CONTENTS AS contents,
				PS.SEND_DATE AS sendDate,
				(CASE WHEN ISNULL(PS.USER_ID ,'') = '' THEN (SELECT MOBILE FROM T_DRIVER D WHERE D.DRIVER_ID = PS.DRIVER_ID) ELSE PS.USER_ID END ) AS sendUserId,
				PM.REGID AS regId
			FROM
				T_PUSH_MSG PM, T_PUSH_SEND PS
			WHERE
				PM.MSG_SEQ = PS.MSG_SEQ
				<if test='isDone != null and !"".equals(isDone)'>
					AND PS.IS_DONE = #{isDone}
				</if>
				<if test='(fromDate != null and !"".equals(fromDate)) and (toDate != null and !"".equals(toDate))'>
					AND CONVERT(CHAR(10), PM.REGDATE, 23) BETWEEN #{fromDate} AND #{toDate}
				</if>
			 ) A 
		WHERE 
			number BETWEEN #{start} AND #{end}
		ORDER BY number ASC 
	</select>
	
	<select id="selectPushCnt" resultType="string" parameterType="java.util.HashMap">
		SELECT 
			COUNT(*) retCnt
		FROM
			T_PUSH_MSG PM, T_PUSH_SEND PS
		WHERE
			PM.MSG_SEQ = PS.MSG_SEQ
			<if test='isDone != null and !"".equals(isDone)'>
				AND PS.IS_DONE = #{isDone}
			</if>
			<if test='(fromDate != null and !"".equals(fromDate)) and (toDate != null and !"".equals(toDate))'>
				AND CONVERT(CHAR(10), PM.REGDATE, 23) BETWEEN #{fromDate} AND #{toDate}
			</if>
	</select>
	
	<select id="searchPushUserList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT 
			ROW_NUMBER() OVER(ORDER BY (SELECT 1)) AS number,
			S.*
		FROM (
			SELECT
				U.USER_ID AS id,
				CM.BIZ_NAME AS bizName,
				CM.CUST_TYPE_CODE AS custTypeCode,
				(SELECT CNAME FROM T_CODE WHERE CODE = CM.CUST_TYPE_CODE AND GCODE = 'CUST_TYPE_CD') AS custTypeName,
				U.USER_NAME AS userName,
				U.MOBILE AS mobile
			FROM 
				T_USER U
				INNER JOIN
				T_CUST_MST CM ON U.CUST_ID = CM.CUST_ID
			WHERE 
				U.USE_YN = 'Y'
				<if test='mobile != null and !"".equals(mobile)'>
					AND U.MOBILE LIKE '%' + #{mobile} + '%'
				</if>
				<if test='bizName != null and !"".equals(bizName)'>
					AND CM.BIZ_NAME LIKE '%' + #{bizName} + '%'
				</if>
				<if test='bizNum != null and !"".equals(bizNum)'>
					AND CM.BIZ_NUM LIKE '%' + #{bizNum} + '%'
				</if>
			UNION
			SELECT
				D.CID AS id,
				VM.BIZ_NAME AS bizName,
				'' AS custTypeCode,
				'차주' AS custTypeName,
				D.DRIVER_NAME AS driverName,
				D.MOBILE AS mobile
			FROM 
				T_DRIVER D
				INNER JOIN 
				T_VEHIC_MST VM ON D.DRIVER_ID = VM.DRIVER_ID 
				<if test='mobile != null and !"".equals(mobile)'>
					AND D.MOBILE LIKE '%' + #{mobile} + '%'
				</if>
				<if test='bizName != null and !"".equals(bizName)'>
					AND VM.BIZ_NAME LIKE '%' + #{bizName} + '%'
				</if>
				<if test='bizNum != null and !"".equals(bizNum)'>
					AND VM.BIZ_NUM LIKE '%' + #{bizNum} + '%'
				</if>
			) S
	</select>
	
	<insert id="insertPushMsg" parameterType="java.util.HashMap">
		INSERT INTO 
			T_PUSH_MSG 
			(
				CUST_ID,
				DEPT_ID,
				ORDER_ID,
				ALLOC_ID,
				TITLE,
				CONTENTS,
				REGDATE,
				REGID
			)
		VALUES			
			(
				#{loginCustId},
				#{loginDeptId},
				#{orderId},
				#{allocId},
				#{title},
				#{contents},
				getdate(),
				#{regId}
			)
		<selectKey keyProperty="msgSeq" resultType="Integer" order="AFTER"> SELECT IDENT_CURRENT('T_PUSH_MSG') </selectKey>
	</insert>
	
	<insert id="insertPushSendList" parameterType="java.util.HashMap">
		INSERT INTO 
			T_PUSH_SEND 
			(
				MSG_SEQ,
				CUST_ID,
				DEPT_ID,
				ORDER_ID,
				ALLOC_ID,
				USER_ID,
				DRIVER_ID,
				PUSH_ID,
				REGDATE,
				REGID
			)
		VALUES			
			<if test='driverList != null and driverList.size != 0'>
				<foreach collection="driverList" item="item" open="" separator="," close="">
					(#{msgSeq}, null, null, null, null, null, #{item.driverId}, #{item.pushId}, getdate(), #{regId})
				</foreach>
			</if>
			<if test='userList != null and userList.size != 0'>
				<if test='driverList != null and driverList.size != 0'>
					<foreach collection="userList" item="item" open="," separator="," close="">
						(#{msgSeq}, #{item.custId}, #{item.deptId}, null, null, #{item.userId}, null, #{item.pushId}, getdate(), #{regId})
					</foreach>
				</if>
				<if test='driverList == null or driverList.size == 0'>
					<foreach collection="userList" item="item" open="" separator="," close="">
						(#{msgSeq}, #{item.custId}, #{item.deptId}, null, null, #{item.userId}, null, #{item.pushId}, getdate(), #{regId})
					</foreach>
				</if>
			</if>
	</insert>
</mapper>